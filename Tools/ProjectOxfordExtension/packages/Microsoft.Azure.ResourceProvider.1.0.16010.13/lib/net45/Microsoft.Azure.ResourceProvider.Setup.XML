<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.ResourceProvider.Setup</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.Database.CommandText">
            <summary>
            Class for commands to SQL Server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.CommandText.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.ResourceProvider.Setup.Database.CommandText"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.CommandText.ToString">
            <summary>
            Returns a string that represents the <see cref="T:Microsoft.Azure.ResourceProvider.Setup.Database.CommandText"/> object. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.CommandText.ResourceManager">
            <summary>
            Gets or sets the resource manager.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.CommandText.ResourceName">
            <summary>
            Gets or sets the resource name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.CommandText.BeginLineNumber">
            <summary>
            Gets or sets the line where the script begins.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.CommandText.EndLineNumber">
            <summary>
            Gets or sets the line where the script ends.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.CommandText.Text">
            <summary>
            Gets or sets the command text.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.CommandText.Parameters">
            <summary>
            Gets or sets the parameters array.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.Database.ConnectionStringHelper">
            <summary>
            Utility class for performing operations on connection strings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ConnectionStringHelper.GetMasterConnectionString(System.String)">
            <summary>
            Gets the same connection string but using the master database.
            </summary>
            <param name="connectionString">The target connection string.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ConnectionStringHelper.GetDatabase(System.String)">
            <summary>
            Gets the database name component of a connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ConnectionStringHelper.GetServer(System.String)">
            <summary>
            Gets the server name component of a connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ConnectionStringHelper.CreateConnectionString(System.String,System.String,System.String,System.Security.SecureString,System.Boolean)">
            <summary>
            Build a connection string from the provided components.
            </summary>
            <param name="server">The server or data source.</param>
            <param name="database">The database or initial catalog.</param>
            <param name="userName">The user name part of the credentials.</param>
            <param name="password">The password part of the credentials.</param>
            <param name="pooling">Flag indicating whether to use connection pooling.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ConnectionStringHelper.AlterConnectionStringNoPooling(System.String)">
            <summary>
            Remove the pooling flag from a connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ConnectionStringHelper.AlterConnectionStringDatabase(System.String,System.String)">
            <summary>
            Replace the database in a connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="database">The database.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ConnectionStringHelper.AlterConnectionStringUser(System.String,System.String,System.String)">
            <summary>
            Replace the user name and password in a connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="userName">The user name.</param>
            <param name="password">The password.</param>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseAction">
            <summary>
            The action performed by sql scripts.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseAction.Install">
            <summary>
            Install database action.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseAction.Uninstall">
            <summary>
            Uninstall database action.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseAction.GetVersion">
            <summary>
            Test database action.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseAction.AddUser">
            <summary>
            Add a database user action.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseAction.RemoveUser">
            <summary>
            Remove a database user action.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseAction.AddContainedUser">
            <summary>
            Add a contained database user action.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseAction.RemoveContainedUser">
            <summary>
            Remove a contained database user action.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseConsts">
            <summary>
            All the constants used in database setup.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseConsts.DefaultValues">
            <summary>
            The default values.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseConsts.DefaultValues.SqlTimeout">
            <summary>
            Default time out for SQL Server operations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller">
            <summary>
            Utility class for performing database operations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.MessageProcessor">
            <summary>
            Base class for message handling
            </summary>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.MessageProcessor.OnMessage(System.Diagnostics.TraceLevel,System.String)">
            <summary>
            Process a message event
            </summary>
            <param name="traceLevel">The trace level</param>
            <param name="message">The message</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.MessageProcessor.OnProgress(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Process an operation progress event.
            </summary>
            <param name="current">Current progress.</param>
            <param name="upperBound">The upper bound.</param>
            <param name="message">The message.</param>
            <param name="isCompleted">Flag indicating whether the operation is complete or not.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.MessageProcessor.MessageHandler(System.Object,Microsoft.Azure.ResourceProvider.Setup.MessageEventArgs)">
            <summary>
            Handling trace messages and console output
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The event args</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.MessageProcessor.ProgressHandler(System.Object,Microsoft.Azure.ResourceProvider.Setup.ProgressEventArgs)">
            <summary>
            Progresses the handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Microsoft.Azure.ResourceProvider.Setup.ProgressEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Microsoft.Azure.ResourceProvider.Setup.MessageProcessor.Message">
            <summary>
            Occurs when [message].
            </summary>
        </member>
        <member name="E:Microsoft.Azure.ResourceProvider.Setup.MessageProcessor.Progress">
            <summary>
            Event for operation progress.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.ReservedDatabaseNames">
            <summary>
            The reserved database names.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.schema">
            <summary>
            The name of the schema.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.timeout">
            <summary>
            Default time out for SQL Server operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.#ctor(Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller"/> class.
            </summary>
            <param name="schema">The schema</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.#ctor(Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseSchema,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller"/> class.
            </summary>
            <param name="schema">The schema</param>
            <param name="timeout">Time out for SQL Server operations.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.InstallDatabase(System.String)">
            <summary>
            Installs a database schema.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.InstallDatabase(System.String,System.Diagnostics.FileVersionInfo,System.Boolean)">
            <summary>
            Installs a database schema.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="versionInfo">The version info.</param>
            <param name="usePartialContainment">The flag indicating whether to use partial containment.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.UninstallDatabase(System.String)">
            <summary>
            Uninstall a database schema.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.DropDatabase(System.String)">
            <summary>
            Drop the database.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.EscapeSqlLiteral(System.String)">
            <summary>
            Escapes the SQL literal.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.CanUsePartialContainment(System.String)">
            <summary>
            Determines whether DB referred to by the specified connection string can use partial containment.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.AddSqlAuthDatabaseUser(System.String,System.String,System.Security.SecureString,System.String,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            Adds a SQL authentication database user.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="roleName">Name of the role.</param>
            <param name="forceUpdate">if set to <c>true</c> the user will be updated with these values if it already exists.</param>
            <param name="usePartialContainment">if set to <c>true</c> use partial containment.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.AddWindowsAuthDatabaseUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            Adds a Windows authentication database user.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="userName">Name of the user.</param>
            <param name="roleName">Name of the role.</param>
            <param name="forceUpdate">if set to <c>true</c> the user will be updated with these values if it already exists.</param>
            <param name="usePartialContainment">if set to <c>true</c> use partial containment.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.RemoveDatabaseUser(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Remove a database user.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="userName">The username.</param>
            <param name="usePartialContainment">Flag indicating whether to use partial containment.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.ChangePassword(System.String,System.String,System.Security.SecureString,System.Nullable{System.Boolean})">
            <summary>
            Change the password of a SQL Server login.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="userName">The name of the user to modify.</param>
            <param name="newPassword">The new password.</param>
            <param name="usePartialContainment">Flag indicating whether to use partial containment.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.GetDatabaseSchemaVersion(System.String)">
            <summary>
            Gets the database schema version.
            </summary>
            <param name="connectionString">The connection string.</param>
            <returns>The version of the schema or null if not found.</returns>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.GetServerContainmentSupport(System.String)">
            <summary>
            Returns a value indicating whether the server supports contained databases.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.GetIsDatabaseContained(System.String)">
            <summary>
            Returns a value indicating whether the databases was created with partial containment.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.CreateDatabase(System.String,System.Boolean)">
            <summary>
            Create a database.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="usePartialContainment">Use partial containment.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.GetCommandTextList(Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseAction,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Gets the commands to execute.
            </summary>
            <param name="action">The action enum.</param>
            <param name="findReplace">The replacement tokens for template parameters.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.ExecuteCommandTextList(System.String,System.Collections.Generic.List{Microsoft.Azure.ResourceProvider.Setup.Database.CommandText})">
            <summary>
            Executes a list of commands.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="commandTextList">The command list.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.ExecuteCommand(System.Data.SqlClient.SqlConnection,Microsoft.Azure.ResourceProvider.Setup.Database.CommandText)">
            <summary>
            Execute a command that doesn't return a value.
            </summary>
            <param name="connection">The connection.</param>
            <param name="commandText">The command.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseInstaller.ExecuteCommandOut(System.Data.SqlClient.SqlConnection,Microsoft.Azure.ResourceProvider.Setup.Database.CommandText)">
            <summary>
            Executes a command that returns a value.
            </summary>
            <param name="connection">The connection.</param>
            <param name="commandText">The command.</param>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseSchema">
            <summary>
            The database schema class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseSchema.GetScripts(Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseAction)">
            <summary>
            Gets the scripts for the specified action.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseSchema.GetDependentSchemas">
            <summary>
            Gets optional schemas required by current instance of the DatabaseSchema
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseSchema.Name">
            <summary>
            Gets or sets the schema.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseSchema.DefaultDatabaseName">
            <summary>
            Gets or sets the default database name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseSchema.Description">
            <summary>
            Gets or sets the description.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseScript">
            <summary>
            The database script class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseScript.ResourceManager">
            <summary>
            Gets or sets the resource manager that contains the script.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseScript.ResourceName">
            <summary>
            Gets or sets the name of the resource that contains the script.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseScript.Content">
            <summary>
            Gets or sets the scripts code.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.Database.ResourceProviderConfigDatabaseSchema">
            <summary>
            The action scripts for the config schema.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ResourceProviderConfigDatabaseSchema.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.ResourceProvider.Setup.Database.ResourceProviderConfigDatabaseSchema"/> class.
            </summary>
            <param name="schemaName">The schema name of the <see cref="T:Microsoft.Azure.ResourceProvider.Setup.Database.ResourceProviderConfigDatabaseSchema"/>.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ResourceProviderConfigDatabaseSchema.GetScripts(Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseAction)">
            <summary>
            Gets the scripts for the specified action.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.Database.ResourceProviderEventsDatabaseSchema">
            <summary>
            The action scripts for the events schema.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ResourceProviderEventsDatabaseSchema.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.ResourceProvider.Setup.Database.ResourceProviderEventsDatabaseSchema"/> class.
            </summary>
            <param name="schemaName">The schema name.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ResourceProviderEventsDatabaseSchema.GetScripts(Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseAction)">
            <summary>
            Gets the scripts for the specified action.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.Database.ResourceProviderUsageDatabaseSchema">
            <summary>
            The action scripts for the events schema.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ResourceProviderUsageDatabaseSchema.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.ResourceProvider.Setup.Database.ResourceProviderUsageDatabaseSchema"/> class.
            </summary>
            <param name="schemaName">The schema name.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ResourceProviderUsageDatabaseSchema.GetScripts(Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseAction)">
            <summary>
            Gets the scripts for the specified action.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.Database.ScriptParser">
            <summary>
            Utility class to parsing scripts.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.ScriptParser.findReplace">
            <summary>
            Gets the replacement token for template parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ScriptParser.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.ResourceProvider.Setup.Database.ScriptParser"/> class.
            </summary>
            <param name="findReplace">The replacement tokens for template parameters.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ScriptParser.ParseSqlScripts(System.Collections.Generic.IEnumerable{Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseScript})">
            <summary>
            Parse a list of resource names.
            </summary>
            <param name="actionList">The list.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ScriptParser.ParseSqlScript(Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseScript)">
            <summary>
            Parse a action resource.
            </summary>
            <param name="action">The action resource.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.ScriptParser.ReadCommandList(System.IO.MemoryStream,Microsoft.Azure.ResourceProvider.Setup.Database.DatabaseScript)">
            <summary>
            Read the command list from the memory stream.
            </summary>
            <param name="memory">The stream.</param>
            <param name="action">The action.</param>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.Database.SqlApplicationLock">
            <summary>
            Class for acquiring locks in database operations.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.SqlApplicationLock.LockNameMaxLength">
            <summary>
            Resource parameter max length on <see href="sp_getapplock()"/> and <see href="sp_releaseapplock()"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.SqlApplicationLock.GetLockScript">
            <summary>
            T-SQL for creating a lock.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.SqlApplicationLock.ReleaseLockScript">
            <summary>
            T-SQL for releasing a lock.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.SqlApplicationLock.secureSqlConnectionString">
            <summary>
            The connection string.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.SqlApplicationLock.lockName">
            <summary>
            The name of the lock.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.SqlApplicationLock.timeout">
            <summary>
            Time out for SQL Server operations.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.ResourceProvider.Setup.Database.SqlApplicationLock.connection">
            <summary>
            The connection to the SQL Server.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.SqlApplicationLock.#ctor(System.String,System.String,System.EventHandler{Microsoft.Azure.ResourceProvider.Setup.MessageEventArgs})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.ResourceProvider.Setup.Database.SqlApplicationLock"/> class.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="lockName">The lock name.</param>
            <param name="messageHandler">The message handler.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.SqlApplicationLock.#ctor(System.String,System.String,System.EventHandler{Microsoft.Azure.ResourceProvider.Setup.MessageEventArgs},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.ResourceProvider.Setup.Database.SqlApplicationLock"/> class.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="lockName">The lock name.</param>
            <param name="messageHandler">The message handler.</param>
            <param name="timeout">Time out for SQL Server operations.</param>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.SqlApplicationLock.Dispose">
            <summary>
            Dispose internal resources.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.SqlApplicationLock.Acquire">
            <summary>
            Acquire a lock.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.SqlApplicationLock.Release">
            <summary>
            Release a lock.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.ResourceProvider.Setup.Database.SqlApplicationLock.ExecuteScript(System.String)">
            <summary>
            Execute a script.
            </summary>
            <param name="script">The script.</param>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Config.ResourceProviderConfigSchemaResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Config.ResourceProviderConfigSchemaResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Config.ResourceProviderConfigSchemaResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Config.ResourceProviderConfigSchemaResources.ConfigSchemaDescription">
            <summary>
              Looks up a localized string similar to Configuration schema..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Config.ResourceProviderConfigSchemaResources.CreateConfigDatabaseUser">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: CreateConfigDatabaseUser.sql
            
            -- SqlCmd.exe variables
            -- -v userName=&quot;$(userName)&quot;
            -- -v password=&quot;$(password)&quot;
            -- -v roleName=&quot;$(roleName)&quot;
            -- -v forceUpdate=$(forceUpdate)
            
            -- BEGIN SCRIPT
            
            -- Login [$(userName)]
            
            DECLARE @forceUpdate as TINYINT
            SET @forceUpdate = $(forceUpdate);
            
            IF NOT EX [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Config.ResourceProviderConfigSchemaResources.CreateConfigSchema">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: CreateConfigSchema.sql
            -- Script Date: 05/23/2014 13:35:27
            
            -- BEGIN SCRIPT
            
            -- SCHEMAS:
            
            -- Schema [$(schemaName)]
            IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N&apos;$(schemaName)&apos;)
            EXEC sys.sp_executesql N&apos;CREATE SCHEMA [$(schemaName)] AUTHORIZATION [dbo]&apos;
            
            GO
            
            -- TABLES:
            
            -- Table [$( [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Config.ResourceProviderConfigSchemaResources.CreateConfigSecurity">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- BEGIN SCRIPT
            
            -- =============================================
            -- Create roles
            -- =============================================
            
            IF (NOT EXISTS(SELECT 1 FROM sys.database_principals WHERE type = N&apos;R&apos; AND name = N&apos;$(schemaName)_Reader&apos;))
              CREATE ROLE $(schemaName)_Reader;
            GO
            
            -- =============================== [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Config.ResourceProviderConfigSchemaResources.CreateContainedDatabaseUser">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: CreateContainedDatabaseUser.sql
            
            -- SqlCmd.exe variables
            -- -v userName=&quot;$(userName)&quot;
            -- -v password=&quot;$(password)&quot;
            -- -v roleName=&quot;$(roleName)&quot;
            -- -v forceUpdate=$(forceUpdate)
            
            -- BEGIN SCRIPT
            
            -- Login [$(userName)]
            
            DECLARE @forceUpdate as TINYINT
            SET @forceUpdate = $(forceUpdate);
            
            IF NOT [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Config.ResourceProviderConfigSchemaResources.DropConfigDatabaseUser">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: DropConfigDatabaseUser.sql
            
            -- SqlCmd.exe variables
            -- -v userName=&quot;$(userName)&quot;
            
            -- BEGIN SCRIPT
            
            -- User [$(userName)]
            IF DATABASE_PRINCIPAL_ID(N&apos;$(userName)&apos;) IS NOT NULL
            DROP USER [$(userName)]
            GO
            
            -- Login [$(userName)]
            IF EXISTS (SELECT * FROM sys.server_principals WHERE name = N&apos;$(userNa [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Config.ResourceProviderConfigSchemaResources.DropConfigSchema">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: DropConfigSchema.sql
            -- Script Date: 05/23/2014 13:35:38
            
            -- BEGIN SCRIPT
            
            -- STORED PROCEDURES:
            
            -- StoredProcedure [$(schemaName)].[GetLastSettingModification]
            IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[$(schemaName)].[GetLastSettingModification]&apos;) AND type in (N&apos;P&apos;, N&apos;PC [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Config.ResourceProviderConfigSchemaResources.DropConfigSecurity">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- BEGIN SCRIPT
            
            -- =============================================
            -- Drop roles
            -- =============================================
            
            -- StoredProcedure [dbo].[$(schemaName)_DropRole]
            IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[dbo].[$(schemaName)_DropRole]&apos;) AND type in (N&apos;P&apos;, N&apos;PC&apos;))
              DROP P [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Config.ResourceProviderConfigSchemaResources.DropContainedDatabaseUser">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: DropContainedDatabaseUser.sql
            
            -- SqlCmd.exe variables
            -- -v userName=&quot;$(userName)&quot;
            
            -- BEGIN SCRIPT
            
            -- User [$(userName)]
            IF DATABASE_PRINCIPAL_ID(N&apos;$(userName)&apos;) IS NOT NULL
            DROP USER [$(userName)]
            GO
            
            -- END SCRIPT
            .
             </summary>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Events.EventsSchemaResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Events.EventsSchemaResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Events.EventsSchemaResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Events.EventsSchemaResources.AddContainedUser">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: AddContainedUser.sql
            
            -- SqlCmd.exe variables
            -- -v userName=&quot;$(userName)&quot;
            -- -v password=&quot;$(password)&quot;
            -- -v roleName=&quot;$(roleName)&quot;
            -- -v forceUpdate=$(forceUpdate)
            
            -- BEGIN SCRIPT
            
            -- Login [$(userName)]
            
            DECLARE @forceUpdate as TINYINT
            SET @forceUpdate = $(forceUpdate);
            
            IF NOT EXISTS (SE [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Events.EventsSchemaResources.AddEventsUser">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: AddEventsUser.sql
            
            -- SqlCmd.exe variables
            -- -v userName=&quot;$(userName)&quot;
            -- -v password=&quot;$(password)&quot;
            -- -v roleName=&quot;$(roleName)&quot;
            -- -v forceUpdate=$(forceUpdate)
            
            -- BEGIN SCRIPT
            
            -- Login [$(userName)]
            
            DECLARE @forceUpdate as TINYINT
            SET @forceUpdate = $(forceUpdate);
            
            IF NOT EXISTS (SELEC [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Events.EventsSchemaResources.CreateEventsSchema">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: CreateEventsSchema.sql
            -- Script Date: 05/23/2014 13:12:26
            
            -- BEGIN SCRIPT
            
            -- SCHEMAS:
            
            -- Schema [common]
            IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N&apos;common&apos;)
            EXEC sys.sp_executesql N&apos;CREATE SCHEMA [common] AUTHORIZATION [dbo]&apos;
            
            GO
            
            -- Schema [$(schemaName)]
            IF NOT EXISTS (SELEC [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Events.EventsSchemaResources.CreateEventsSecurity">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- SqlCmd.exe variables
            -- -v schemaName=&quot;$(schemaName)&quot;
            
            -- BEGIN SCRIPT
            
            -- =============================================
            -- Create roles
            -- =============================================
            
            IF (NOT EXISTS(SELECT 1 FROM sys.database_principals WHERE type = N&apos;R&apos; AND name = N&apos;$(schemaName)_Service&apos;))
              CREATE ROLE [ [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Events.EventsSchemaResources.DropEventsSchema">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: DropEventsSchema.sql
            -- Script Date: 05/23/2014 13:12:38
            
            -- BEGIN SCRIPT
            
            -- STORED PROCEDURES:
            
            -- StoredProcedure [common].[AcquireLock]
            IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[common].[AcquireLock]&apos;) AND type in (N&apos;P&apos;, N&apos;PC&apos;))
            DROP PROCEDURE [common].[AcquireLock]
             [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Events.EventsSchemaResources.DropEventsSecurity">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- BEGIN SCRIPT
            
            -- =============================================
            -- Drop roles
            -- =============================================
            
            -- StoredProcedure [dbo].[DropRole]
            IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[dbo].[DropRole]&apos;) AND type in (N&apos;P&apos;, N&apos;PC&apos;))
              DROP PROCEDURE [dbo].[DropRole]
            G [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Events.EventsSchemaResources.EventsSchemaDescription">
            <summary>
              Looks up a localized string similar to Events service database schema..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Events.EventsSchemaResources.RemoveContainedUser">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: RemoveContainedUser.sql
            
            -- SqlCmd.exe variables
            -- -v userName=&quot;$(userName)&quot;
            
            -- BEGIN SCRIPT
            
            -- User [$(userName)]
            IF DATABASE_PRINCIPAL_ID(N&apos;$(userName)&apos;) IS NOT NULL
            DROP USER [$(userName)];
            GO
            
            -- END SCRIPT
            .
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Events.EventsSchemaResources.RemoveEventsUser">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: RemoveEventsUser.sql
            
            -- SqlCmd.exe variables
            -- -v userName=&quot;$(userName)&quot;
            
            -- BEGIN SCRIPT
            
            -- User [$(userName)]
            IF DATABASE_PRINCIPAL_ID(N&apos;$(userName)&apos;) IS NOT NULL
            DROP USER [$(userName)];
            GO
            
            -- Login [$(userName)]
            IF EXISTS (SELECT * FROM sys.server_principals WHERE name = N&apos;$(userName)&apos;) [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Usage.UsageSchemaResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Usage.UsageSchemaResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Usage.UsageSchemaResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Usage.UsageSchemaResources.CreateUsageContainedUser">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: CreateUsageContainedUser.sql
            
            -- SqlCmd.exe variables
            -- -v userName=&quot;$(userName)&quot;
            -- -v password=&quot;$(password)&quot;
            -- -v roleName=&quot;$(roleName)&quot;
            -- -v forceUpdate=$(forceUpdate)
            
            -- BEGIN SCRIPT
            
            -- Login [$(userName)]
            
            DECLARE @forceUpdate as TINYINT
            SET @forceUpdate = $(forceUpdate);
            
            IF NOT EX [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Usage.UsageSchemaResources.CreateUsageDatabaseUser">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: CreateUsageDatabaseUser.sql
            
            -- SqlCmd.exe variables
            -- -v userName=&quot;$(userName)&quot;
            -- -v password=&quot;$(password)&quot;
            -- -v roleName=&quot;$(roleName)&quot;
            -- -v forceUpdate=$(forceUpdate)
            
            -- BEGIN SCRIPT
            
            -- Login [$(userName)]
            
            DECLARE @forceUpdate as TINYINT
            SET @forceUpdate = $(forceUpdate);
            
            IF NOT EXI [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Usage.UsageSchemaResources.CreateUsageSchema">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: CreateUsageSchema.sql
            -- Script Date: 05/23/2014 13:13:31
            
            -- BEGIN SCRIPT
            
            -- SCHEMAS:
            
            -- Schema [common]
            IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N&apos;common&apos;)
            EXEC sys.sp_executesql N&apos;CREATE SCHEMA [common] AUTHORIZATION [dbo]&apos;
            
            GO
            
            -- Schema [$(schemaName)]
            IF NOT EXISTS (SELECT [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Usage.UsageSchemaResources.CreateUsageSecurity">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- =============================================
            -- Create roles
            -- =============================================
            
            IF (NOT EXISTS(SELECT 1 FROM sys.database_principals WHERE type = N&apos;R&apos; AND name = N&apos;$(schemaName)_Service&apos;))
              CREATE ROLE [$(schemaName)_Service];
            GO
            
            -- =============================================
             [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Usage.UsageSchemaResources.DropUsageContainedUser">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: DropUsageContainedUser.sql
            
            -- SqlCmd.exe variables
            -- -v userName=&quot;$(userName)&quot;
            
            -- BEGIN SCRIPT
            
            -- User [$(userName)]
            IF DATABASE_PRINCIPAL_ID(N&apos;$(userName)&apos;) IS NOT NULL
            DROP USER [$(userName)]
            GO
            
            -- END SCRIPT
            .
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Usage.UsageSchemaResources.DropUsageDatabaseUser">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: DropUsageDatabaseUser.sql
            
            -- SqlCmd.exe variables
            -- -v userName=&quot;$(userName)&quot;
            
            -- BEGIN SCRIPT
            
            -- User [$(userName)]
            IF DATABASE_PRINCIPAL_ID(N&apos;$(userName)&apos;) IS NOT NULL
            DROP USER [$(userName)]
            GO
            
            -- Login [$(userName)]
            IF EXISTS (SELECT * FROM sys.server_principals WHERE name = N&apos;$(userNam [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Usage.UsageSchemaResources.DropUsageSchema">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- Script Name: DropUsageSchema.sql
            -- Script Date: 05/23/2014 13:13:42
            
            -- BEGIN SCRIPT
            
            -- STORED PROCEDURES:
            
            -- StoredProcedure [common].[AcquireLock]
            IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[common].[AcquireLock]&apos;) AND type in (N&apos;P&apos;, N&apos;PC&apos;))
            DROP PROCEDURE [common].[AcquireLock]
            G [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Usage.UsageSchemaResources.DropUsageSecurity">
             <summary>
               Looks up a localized string similar to ------------------------------------------------------------
            -- Copyright (c) Microsoft Corporation. All rights reserved.
            ------------------------------------------------------------
            
            -- =============================================
            -- Drop roles
            -- =============================================
            
            -- StoredProcedure [dbo].[$(schemaName)_DropRole]
            IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[dbo].[$(schemaName)_DropRole]&apos;) AND type in (N&apos;P&apos;, N&apos;PC&apos;))
              DROP PROCEDURE [dbo].[$(s [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.Database.SqlScripts.Usage.UsageSchemaResources.UsageSchemaDescription">
            <summary>
              Looks up a localized string similar to Usage service database schema..
            </summary>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.MessageEventArgs">
            <summary>
            The message args for tracing and console output.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.MessageEventArgs.TraceLevel">
            <summary>
            Gets or sets the trace level.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.MessageEventArgs.Message">
            <summary>
            Gets or sets the message.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.ProgressEventArgs">
            <summary>
            Progress event arguments for passing the progress report from the backend to the cmdlet classes
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.ProgressEventArgs.Current">
            <summary>
            Gets or sets the current.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.ProgressEventArgs.UpperBound">
            <summary>
            Gets or sets the upper bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.ProgressEventArgs.Message">
            <summary>
            Gets or sets the message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.ProgressEventArgs.IsCompleted">
            <summary>
            Gets or sets a value indicating whether this instance is completed.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.ResourceProvider.Setup.StringResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.ActionScriptNotFound">
            <summary>
              Looks up a localized string similar to Action script &apos;{0}&apos; was not found in resource manager &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.AddDatabaseUserTrace">
            <summary>
              Looks up a localized string similar to Adding user in database &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.ApplicationLockInvalidResultError">
            <summary>
              Looks up a localized string similar to The call to the application lock stored procedure returned error &apos;{0}&apos;. See sp_getapplock() or sp_releaseapplock()..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.CannotDeleteSystemDatabase">
            <summary>
              Looks up a localized string similar to Cannot delete system database &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.ChangePasswordTrace">
            <summary>
              Looks up a localized string similar to Changing password for database user &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.CommandTextFormat">
            <summary>
              Looks up a localized string similar to Action &apos;{0}&apos; in resource manager &apos;{1}&apos; ({2}..{3}).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.CompletedSqlScripts">
            <summary>
              Looks up a localized string similar to Completed SQL scripts..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.DatabaseContainmentSupportMessage">
             <summary>
               Looks up a localized string similar to Unable to determine SQL server support for contained databases. This could be normal since failure is expected when the server does not support it.
            Exception details: {0} ({1:x8}): {2}.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.DatabaseNameReservedMessage">
            <summary>
              Looks up a localized string similar to Database &apos;{0}&apos; is one of the system databases. Storing user data there should be avoided..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.DatabaseSchemaVersionExceptionMessage">
             <summary>
               Looks up a localized string similar to Unable to get the SQL database schema version. This could be normal since failure is expected when the database does not exist.
            Exception details: {0} ({1:x8}): {2}.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.DetectingContainedDatabaseSupportTrace">
            <summary>
              Looks up a localized string similar to Detecting contained database support  in SQL server &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.DisposingExceptionTrace">
            <summary>
              Looks up a localized string similar to An exception occurred while releasing the database lock: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.EstablishingConnection">
            <summary>
              Looks up a localized string similar to Establishing connection to SQL server &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.GettingDatabaseVersionTrace">
            <summary>
              Looks up a localized string similar to Getting version for database &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.InstallDatabaseTrace">
            <summary>
              Looks up a localized string similar to Creating database &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.InvalidSharedSettingName">
            <summary>
              Looks up a localized string similar to The shared setting name &apos;{0}&apos; is not a valid identifier..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.MissingDatabase">
            <summary>
              Looks up a localized string similar to The database component is missing from the connection string..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.ParseSqlScriptTrace">
            <summary>
              Looks up a localized string similar to Reading script &apos;{0}&apos; from resource manager &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.RemoveDatabaseUserTrace">
            <summary>
              Looks up a localized string similar to Removing user in database &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.ResourceProvider.Setup.StringResources.UninstallDatabaseTrace">
            <summary>
              Looks up a localized string similar to Dropping database &apos;{0}&apos;..
            </summary>
        </member>
    </members>
</doc>
