{
        "Unterminated string literal.": "Unterminated string literal.",
        "Identifier expected.": "식별자가 필요합니다.",
        "'{0}' expected.": "'{0}'이(가) 필요합니다.",
        "A file cannot have a reference to itself.": "파일에 자신에 대한 참조를 포함할 수 없습니다.",
        "Trailing comma not allowed.": "Trailing comma not allowed.",
        "'*/' expected.": "'*/'가 필요합니다.",
        "Unexpected token.": "예기치 않은 토큰입니다.",
        "A rest parameter must be last in a parameter list.": "A rest parameter must be last in a parameter list.",
        "Parameter cannot have question mark and initializer.": "매개 변수에 물음표와 이니셜라이저를 사용할 수 없습니다.",
        "A required parameter cannot follow an optional parameter.": "A required parameter cannot follow an optional parameter.",
        "An index signature cannot have a rest parameter.": "An index signature cannot have a rest parameter.",
        "An index signature parameter cannot have an accessibility modifier.": "An index signature parameter cannot have an accessibility modifier.",
        "An index signature parameter cannot have a question mark.": "An index signature parameter cannot have a question mark.",
        "An index signature parameter cannot have an initializer.": "An index signature parameter cannot have an initializer.",
        "An index signature must have a type annotation.": "An index signature must have a type annotation.",
        "An index signature parameter must have a type annotation.": "An index signature parameter must have a type annotation.",
        "An index signature parameter type must be 'string' or 'number'.": "An index signature parameter type must be 'string' or 'number'.",
        "Accessibility modifier already seen.": "액세스 가능성 한정자가 이미 있습니다.",
        "'{0}' modifier must precede '{1}' modifier.": "'{0}' 한정자는 '{1}' 한정자 앞에 와야 합니다.",
        "'{0}' modifier already seen.": "'{0}' 한정자가 이미 있습니다.",
        "'{0}' modifier cannot appear on a class element.": "'{0}' 한정자는 클래스 요소에 나타날 수 없습니다.",
        "'super' must be followed by an argument list or member access.": "'super' must be followed by an argument list or member access.",
        "Only ambient modules can use quoted names.": "앰비언트 모듈만 따옴표가 붙은 이름을 사용할 수 있습니다.",
        "Statements are not allowed in ambient contexts.": "앰비언트 컨텍스트에서는 문이 허용되지 않습니다.",
        "A 'declare' modifier cannot be used in an already ambient context.": "A 'declare' modifier cannot be used in an already ambient context.",
        "Initializers are not allowed in ambient contexts.": "앰비언트 컨텍스트에서는 이니셜라이저가 허용되지 않습니다.",
        "'{0}' modifier cannot be used in an ambient context.": "'{0}' modifier cannot be used in an ambient context.",
        "'{0}' modifier cannot be used with a class declaration.": "'{0}' modifier cannot be used with a class declaration.",
        "'{0}' modifier cannot be used here.": "'{0}' modifier cannot be used here.",
        "'{0}' modifier cannot appear on a data property.": "'{0}' modifier cannot appear on a data property.",
        "'{0}' modifier cannot appear on a module element.": "'{0}' 한정자는 모듈 요소에 나타날 수 없습니다.",
        "A '{0}' modifier cannot be used with an interface declaration.": "A '{0}' modifier cannot be used with an interface declaration.",
        "A 'declare' modifier is required for a top level declaration in a .d.ts file.": "A 'declare' modifier is required for a top level declaration in a .d.ts file.",
        "A rest parameter cannot be optional.": "A rest parameter cannot be optional.",
        "A rest parameter cannot have an initializer.": "A rest parameter cannot have an initializer.",
        "A 'set' accessor must have exactly one parameter.": "A 'set' accessor must have exactly one parameter.",
        "A 'set' accessor cannot have an optional parameter.": "A 'set' accessor cannot have an optional parameter.",
        "A 'set' accessor parameter cannot have an initializer.": "A 'set' accessor parameter cannot have an initializer.",
        "A 'set' accessor cannot have rest parameter.": "A 'set' accessor cannot have rest parameter.",
        "A 'get' accessor cannot have parameters.": "A 'get' accessor cannot have parameters.",
        "Type '{0}' is not a valid async function return type.": "Type '{0}' is not a valid async function return type.",
        "Accessors are only available when targeting ECMAScript 5 and higher.": "접근자는 ECMAScript 5 이상을 대상으로 지정할 때만 사용할 수 있습니다.",
        "An async function or method must have a valid awaitable return type.": "An async function or method must have a valid awaitable return type.",
        "Operand for 'await' does not have a valid callable 'then' member.": "Operand for 'await' does not have a valid callable 'then' member.",
        "Return expression in async function does not have a valid callable 'then' member.": "Return expression in async function does not have a valid callable 'then' member.",
        "Expression body for async arrow function does not have a valid callable 'then' member.": "Expression body for async arrow function does not have a valid callable 'then' member.",
        "Enum member must have initializer.": "열거형 멤버에는 이니셜라이저가 있어야 합니다.",
        "{0} is referenced directly or indirectly in the fulfillment callback of its own 'then' method.": "{0} is referenced directly or indirectly in the fulfillment callback of its own 'then' method.",
        "An export assignment cannot be used in a namespace.": "An export assignment cannot be used in a namespace.",
        "Ambient enum elements can only have integer literal initializers.": "앰비언트 열거형 요소에는 정수 리터럴 이니셜라이저만 사용할 수 있습니다.",
        "Unexpected token. A constructor, method, accessor, or property was expected.": "Unexpected token. A constructor, method, accessor, or property was expected.",
        "A '{0}' modifier cannot be used with an import declaration.": "A '{0}' modifier cannot be used with an import declaration.",
        "Invalid 'reference' directive syntax.": "'reference' 지시문 구문이 잘못되었습니다.",
        "Octal literals are not available when targeting ECMAScript 5 and higher.": "ECMAScript 5 이상을 대상으로 지정할 때는 8진수 리터럴을 사용할 수 없습니다.",
        "An accessor cannot be declared in an ambient context.": "An accessor cannot be declared in an ambient context.",
        "'{0}' modifier cannot appear on a constructor declaration.": "'{0}' 한정자는 생성자 선언에 표시될 수 없습니다.",
        "'{0}' modifier cannot appear on a parameter.": "'{0}' 한정자는 매개 변수에 표시될 수 없습니다.",
        "Only a single variable declaration is allowed in a 'for...in' statement.": "'for...in' 문에는 단일 변수 선언만 허용됩니다.",
        "Type parameters cannot appear on a constructor declaration.": "형식 매개 변수는 생성자 선언에 표시될 수 없습니다.",
        "Type annotation cannot appear on a constructor declaration.": "형식 주석은 생성자 선언에 표시될 수 없습니다.",
        "An accessor cannot have type parameters.": "An accessor cannot have type parameters.",
        "A 'set' accessor cannot have a return type annotation.": "A 'set' accessor cannot have a return type annotation.",
        "An index signature must have exactly one parameter.": "An index signature must have exactly one parameter.",
        "'{0}' list cannot be empty.": "'{0}' list cannot be empty.",
        "Type parameter list cannot be empty.": "Type parameter list cannot be empty.",
        "Type argument list cannot be empty.": "Type argument list cannot be empty.",
        "Invalid use of '{0}' in strict mode.": "Invalid use of '{0}' in strict mode.",
        "'with' statements are not allowed in strict mode.": "'with' statements are not allowed in strict mode.",
        "'delete' cannot be called on an identifier in strict mode.": "'delete' cannot be called on an identifier in strict mode.",
        "A 'continue' statement can only be used within an enclosing iteration statement.": "A 'continue' statement can only be used within an enclosing iteration statement.",
        "A 'break' statement can only be used within an enclosing iteration or switch statement.": "A 'break' statement can only be used within an enclosing iteration or switch statement.",
        "Jump target cannot cross function boundary.": "점프 대상은 함수 경계를 벗어날 수 없습니다.",
        "A 'return' statement can only be used within a function body.": "A 'return' statement can only be used within a function body.",
        "Expression expected.": "Expression expected.",
        "Type expected.": "Type expected.",
        "A class member cannot be declared optional.": "A class member cannot be declared optional.",
        "A 'default' clause cannot appear more than once in a 'switch' statement.": "A 'default' clause cannot appear more than once in a 'switch' statement.",
        "Duplicate label '{0}'": "Duplicate label '{0}'",
        "A 'continue' statement can only jump to a label of an enclosing iteration statement.": "A 'continue' statement can only jump to a label of an enclosing iteration statement.",
        "A 'break' statement can only jump to a label of an enclosing statement.": "A 'break' statement can only jump to a label of an enclosing statement.",
        "An object literal cannot have multiple properties with the same name in strict mode.": "An object literal cannot have multiple properties with the same name in strict mode.",
        "An object literal cannot have multiple get/set accessors with the same name.": "An object literal cannot have multiple get/set accessors with the same name.",
        "An object literal cannot have property and accessor with the same name.": "An object literal cannot have property and accessor with the same name.",
        "An export assignment cannot have modifiers.": "An export assignment cannot have modifiers.",
        "Octal literals are not allowed in strict mode.": "Octal literals are not allowed in strict mode.",
        "A tuple type element list cannot be empty.": "A tuple type element list cannot be empty.",
        "Variable declaration list cannot be empty.": "Variable declaration list cannot be empty.",
        "Digit expected.": "Digit expected.",
        "Hexadecimal digit expected.": "Hexadecimal digit expected.",
        "Unexpected end of text.": "Unexpected end of text.",
        "Invalid character.": "Invalid character.",
        "Declaration or statement expected.": "Declaration or statement expected.",
        "Statement expected.": "Statement expected.",
        "'case' or 'default' expected.": "'case' or 'default' expected.",
        "Property or signature expected.": "Property or signature expected.",
        "Enum member expected.": "Enum member expected.",
        "Variable declaration expected.": "Variable declaration expected.",
        "Argument expression expected.": "Argument expression expected.",
        "Property assignment expected.": "Property assignment expected.",
        "Expression or comma expected.": "Expression or comma expected.",
        "Parameter declaration expected.": "Parameter declaration expected.",
        "Type parameter declaration expected.": "Type parameter declaration expected.",
        "Type argument expected.": "Type argument expected.",
        "String literal expected.": "String literal expected.",
        "Line break not permitted here.": "Line break not permitted here.",
        "'{' or ';' expected.": "'{' or ';' expected.",
        "Modifiers not permitted on index signature members.": "Modifiers not permitted on index signature members.",
        "Declaration expected.": "Declaration expected.",
        "Import declarations in a namespace cannot reference a module.": "Import declarations in a namespace cannot reference a module.",
        "Cannot compile modules unless the '--module' flag is provided.": "Cannot compile modules unless the '--module' flag is provided.",
        "File name '{0}' differs from already included file name '{1}' only in casing": "File name '{0}' differs from already included file name '{1}' only in casing",
        "'new T[]' cannot be used to create an array. Use 'new Array<T>()' instead.": "배열을 만드는 데 'new T[]'를 사용할 수 없습니다. 대신 'new Array<T>()'를 사용하십시오.",
        "'const' declarations must be initialized": "'const' declarations must be initialized",
        "'const' declarations can only be declared inside a block.": "'const' declarations can only be declared inside a block.",
        "'let' declarations can only be declared inside a block.": "'let' declarations can only be declared inside a block.",
        "Unterminated template literal.": "Unterminated template literal.",
        "Unterminated regular expression literal.": "Unterminated regular expression literal.",
        "An object member cannot be declared optional.": "An object member cannot be declared optional.",
        "A 'yield' expression is only allowed in a generator body.": "A 'yield' expression is only allowed in a generator body.",
        "Computed property names are not allowed in enums.": "Computed property names are not allowed in enums.",
        "A computed property name in an ambient context must directly refer to a built-in symbol.": "A computed property name in an ambient context must directly refer to a built-in symbol.",
        "A computed property name in a class property declaration must directly refer to a built-in symbol.": "A computed property name in a class property declaration must directly refer to a built-in symbol.",
        "A computed property name in a method overload must directly refer to a built-in symbol.": "A computed property name in a method overload must directly refer to a built-in symbol.",
        "A computed property name in an interface must directly refer to a built-in symbol.": "A computed property name in an interface must directly refer to a built-in symbol.",
        "A computed property name in a type literal must directly refer to a built-in symbol.": "A computed property name in a type literal must directly refer to a built-in symbol.",
        "A comma expression is not allowed in a computed property name.": "A comma expression is not allowed in a computed property name.",
        "'extends' clause already seen.": "'extends' 절이 이미 있습니다.",
        "'extends' clause must precede 'implements' clause.": "'extends' 절은 'implements' 절 앞에 와야 합니다.",
        "Classes can only extend a single class.": "클래스는 단일 클래스만 확장할 수 있습니다.",
        "'implements' clause already seen.": "'implements' 절이 이미 있습니다.",
        "Interface declaration cannot have 'implements' clause.": "인터페이스 선언에 'implements' 절을 사용할 수 없습니다.",
        "Binary digit expected.": "Binary digit expected.",
        "Octal digit expected.": "Octal digit expected.",
        "Unexpected token. '{' expected.": "Unexpected token. '{' expected.",
        "Property destructuring pattern expected.": "Property destructuring pattern expected.",
        "Array element destructuring pattern expected.": "Array element destructuring pattern expected.",
        "A destructuring declaration must have an initializer.": "A destructuring declaration must have an initializer.",
        "An implementation cannot be declared in ambient contexts.": "An implementation cannot be declared in ambient contexts.",
        "Modifiers cannot appear here.": "한정자를 여기에 표시할 수 없습니다.",
        "Merge conflict marker encountered.": "Merge conflict marker encountered.",
        "A rest element cannot have an initializer.": "A rest element cannot have an initializer.",
        "A parameter property may not be a binding pattern.": "A parameter property may not be a binding pattern.",
        "Only a single variable declaration is allowed in a 'for...of' statement.": "Only a single variable declaration is allowed in a 'for...of' statement.",
        "The variable declaration of a 'for...in' statement cannot have an initializer.": "The variable declaration of a 'for...in' statement cannot have an initializer.",
        "The variable declaration of a 'for...of' statement cannot have an initializer.": "The variable declaration of a 'for...of' statement cannot have an initializer.",
        "An import declaration cannot have modifiers.": "An import declaration cannot have modifiers.",
        "Module '{0}' has no default export.": "Module '{0}' has no default export.",
        "An export declaration cannot have modifiers.": "An export declaration cannot have modifiers.",
        "Export declarations are not permitted in a namespace.": "Export declarations are not permitted in a namespace.",
        "Catch clause variable name must be an identifier.": "Catch clause variable name must be an identifier.",
        "Catch clause variable cannot have a type annotation.": "Catch clause variable cannot have a type annotation.",
        "Catch clause variable cannot have an initializer.": "Catch clause variable cannot have an initializer.",
        "An extended Unicode escape value must be between 0x0 and 0x10FFFF inclusive.": "An extended Unicode escape value must be between 0x0 and 0x10FFFF inclusive.",
        "Unterminated Unicode escape sequence.": "Unterminated Unicode escape sequence.",
        "Line terminator not permitted before arrow.": "Line terminator not permitted before arrow.",
        "Import assignment cannot be used when targeting ECMAScript 6 or higher. Consider using 'import * as ns from \"mod\"', 'import {a} from \"mod\"' or 'import d from \"mod\"' instead.": "Import assignment cannot be used when targeting ECMAScript 6 or higher. Consider using 'import * as ns from \"mod\"', 'import {a} from \"mod\"' or 'import d from \"mod\"' instead.",
        "Export assignment cannot be used when targeting ECMAScript 6 or higher. Consider using 'export default' instead.": "Export assignment cannot be used when targeting ECMAScript 6 or higher. Consider using 'export default' instead.",
        "Cannot compile modules into 'commonjs', 'amd', 'system' or 'umd' when targeting 'ES6' or higher.": "Cannot compile modules into 'commonjs', 'amd', 'system' or 'umd' when targeting 'ES6' or higher.",
        "Decorators are only available when targeting ECMAScript 5 and higher.": "Decorators are only available when targeting ECMAScript 5 and higher.",
        "Decorators are not valid here.": "Decorators are not valid here.",
        "Decorators cannot be applied to multiple get/set accessors of the same name.": "Decorators cannot be applied to multiple get/set accessors of the same name.",
        "Cannot compile namespaces when the '--isolatedModules' flag is provided.": "Cannot compile namespaces when the '--isolatedModules' flag is provided.",
        "Ambient const enums are not allowed when the '--isolatedModules' flag is provided.": "Ambient const enums are not allowed when the '--isolatedModules' flag is provided.",
        "Invalid use of '{0}'. Class definitions are automatically in strict mode.": "Invalid use of '{0}'. Class definitions are automatically in strict mode.",
        "A class declaration without the 'default' modifier must have a name": "A class declaration without the 'default' modifier must have a name",
        "Identifier expected. '{0}' is a reserved word in strict mode": "Identifier expected. '{0}' is a reserved word in strict mode",
        "Identifier expected. '{0}' is a reserved word in strict mode. Class definitions are automatically in strict mode.": "Identifier expected. '{0}' is a reserved word in strict mode. Class definitions are automatically in strict mode.",
        "Identifier expected. '{0}' is a reserved word in strict mode. Modules are automatically in strict mode.": "Identifier expected. '{0}' is a reserved word in strict mode. Modules are automatically in strict mode.",
        "Invalid use of '{0}'. Modules are automatically in strict mode.": "Invalid use of '{0}'. Modules are automatically in strict mode.",
        "Export assignment is not supported when '--module' flag is 'system'.": "Export assignment is not supported when '--module' flag is 'system'.",
        "Experimental support for decorators is a feature that is subject to change in a future release. Specify '--experimentalDecorators' to remove this warning.": "Experimental support for decorators is a feature that is subject to change in a future release. Specify '--experimentalDecorators' to remove this warning.",
        "Generators are only available when targeting ECMAScript 6 or higher.": "Generators are only available when targeting ECMAScript 6 or higher.",
        "Generators are not allowed in an ambient context.": "Generators are not allowed in an ambient context.",
        "An overload signature cannot be declared as a generator.": "An overload signature cannot be declared as a generator.",
        "'{0}' tag already specified.": "'{0}' tag already specified.",
        "Signature '{0}' must have a type predicate.": "Signature '{0}' must have a type predicate.",
        "Cannot find parameter '{0}'.": "Cannot find parameter '{0}'.",
        "Type predicate '{0}' is not assignable to '{1}'.": "Type predicate '{0}' is not assignable to '{1}'.",
        "Parameter '{0}' is not in the same position as parameter '{1}'.": "Parameter '{0}' is not in the same position as parameter '{1}'.",
        "A type predicate is only allowed in return type position for functions and methods.": "A type predicate is only allowed in return type position for functions and methods.",
        "A type predicate cannot reference a rest parameter.": "A type predicate cannot reference a rest parameter.",
        "A type predicate cannot reference element '{0}' in a binding pattern.": "A type predicate cannot reference element '{0}' in a binding pattern.",
        "An export assignment can only be used in a module.": "An export assignment can only be used in a module.",
        "An import declaration can only be used in a namespace or module.": "An import declaration can only be used in a namespace or module.",
        "An export declaration can only be used in a module.": "An export declaration can only be used in a module.",
        "An ambient module declaration is only allowed at the top level in a file.": "An ambient module declaration is only allowed at the top level in a file.",
        "A namespace declaration is only allowed in a namespace or module.": "A namespace declaration is only allowed in a namespace or module.",
        "Experimental support for async functions is a feature that is subject to change in a future release. Specify '--experimentalAsyncFunctions' to remove this warning.": "Experimental support for async functions is a feature that is subject to change in a future release. Specify '--experimentalAsyncFunctions' to remove this warning.",
        "'with' statements are not allowed in an async function block.": "'with' statements are not allowed in an async function block.",
        "'await' expression is only allowed within an async function.": "'await' expression is only allowed within an async function.",
        "Async functions are only available when targeting ECMAScript 6 and higher.": "Async functions are only available when targeting ECMAScript 6 and higher.",
        "The return type of a property decorator function must be either 'void' or 'any'.": "The return type of a property decorator function must be either 'void' or 'any'.",
        "The return type of a parameter decorator function must be either 'void' or 'any'.": "The return type of a parameter decorator function must be either 'void' or 'any'.",
        "Unable to resolve signature of class decorator when called as an expression.": "Unable to resolve signature of class decorator when called as an expression.",
        "Unable to resolve signature of parameter decorator when called as an expression.": "Unable to resolve signature of parameter decorator when called as an expression.",
        "Unable to resolve signature of property decorator when called as an expression.": "Unable to resolve signature of property decorator when called as an expression.",
        "Unable to resolve signature of method decorator when called as an expression.": "Unable to resolve signature of method decorator when called as an expression.",
        "'abstract' modifier can only appear on a class or method declaration.": "'abstract' modifier can only appear on a class or method declaration.",
        "'{0}' modifier cannot be used with '{1}' modifier.": "'{0}' modifier cannot be used with '{1}' modifier.",
        "Abstract methods can only appear within an abstract class.": "Abstract methods can only appear within an abstract class.",
        "Method '{0}' cannot have an implementation because it is marked abstract.": "Method '{0}' cannot have an implementation because it is marked abstract.",
        "Duplicate identifier '{0}'.": "'{0}' 식별자가 중복되었습니다.",
        "Initializer of instance member variable '{0}' cannot reference identifier '{1}' declared in the constructor.": "인스턴스 멤버 변수 '{0}'의 이니셜라이저는 생성자에 선언된 식별자 '{1}'을(를) 참조할 수 없습니다.",
        "Static members cannot reference class type parameters.": "정적 멤버는 클래스 형식 매개 변수를 참조할 수 없습니다.",
        "Circular definition of import alias '{0}'.": "Circular definition of import alias '{0}'.",
        "Cannot find name '{0}'.": "Cannot find name '{0}'.",
        "Module '{0}' has no exported member '{1}'.": "Module '{0}' has no exported member '{1}'.",
        "File '{0}' is not a module.": "File '{0}' is not a module.",
        "Cannot find module '{0}'.": "Cannot find module '{0}'.",
        "An export assignment cannot be used in a module with other exported elements.": "An export assignment cannot be used in a module with other exported elements.",
        "Type '{0}' recursively references itself as a base type.": "Type '{0}' recursively references itself as a base type.",
        "A class may only extend another class.": "클래스는 다른 클래스만 확장할 수 있습니다.",
        "An interface may only extend a class or another interface.": "An interface may only extend a class or another interface.",
        "Constraint of a type parameter cannot reference any type parameter from the same type parameter list.": "형식 매개 변수의 제약 조건은 동일 형식의 매개 변수 목록에서 형식 매개 변수를 참조할 수 없습니다.",
        "Generic type '{0}' requires {1} type argument(s).": "제네릭 형식 '{0}'에서 {1} 형식 인수를 반환합니다.",
        "Type '{0}' is not generic.": "Type '{0}' is not generic.",
        "Global type '{0}' must be a class or interface type.": "Global type '{0}' must be a class or interface type.",
        "Global type '{0}' must have {1} type parameter(s).": "Global type '{0}' must have {1} type parameter(s).",
        "Cannot find global type '{0}'.": "Cannot find global type '{0}'.",
        "Named property '{0}' of types '{1}' and '{2}' are not identical.": "Named property '{0}' of types '{1}' and '{2}' are not identical.",
        "Interface '{0}' cannot simultaneously extend types '{1}' and '{2}'.": "Interface '{0}' cannot simultaneously extend types '{1}' and '{2}'.",
        "Excessive stack depth comparing types '{0}' and '{1}'.": "Excessive stack depth comparing types '{0}' and '{1}'.",
        "Type '{0}' is not assignable to type '{1}'.": "Type '{0}' is not assignable to type '{1}'.",
        "Property '{0}' is missing in type '{1}'.": "Property '{0}' is missing in type '{1}'.",
        "Property '{0}' is private in type '{1}' but not in type '{2}'.": "Property '{0}' is private in type '{1}' but not in type '{2}'.",
        "Types of property '{0}' are incompatible.": "Types of property '{0}' are incompatible.",
        "Property '{0}' is optional in type '{1}' but required in type '{2}'.": "Property '{0}' is optional in type '{1}' but required in type '{2}'.",
        "Types of parameters '{0}' and '{1}' are incompatible.": "Types of parameters '{0}' and '{1}' are incompatible.",
        "Index signature is missing in type '{0}'.": "Index signature is missing in type '{0}'.",
        "Index signatures are incompatible.": "Index signatures are incompatible.",
        "'this' cannot be referenced in a module or namespace body.": "'this' cannot be referenced in a module or namespace body.",
        "'this' cannot be referenced in current location.": "현재 위치에서 'this'를 참조할 수 없습니다.",
        "'this' cannot be referenced in constructor arguments.": "생성자 인수에서 'this'를 참조할 수 없습니다.",
        "'this' cannot be referenced in a static property initializer.": "'this' cannot be referenced in a static property initializer.",
        "'super' can only be referenced in a derived class.": "'super' can only be referenced in a derived class.",
        "'super' cannot be referenced in constructor arguments.": "'super'는 생성자 인수에서 참조할 수 없습니다.",
        "Super calls are not permitted outside constructors or in nested functions inside constructors.": "생성자 밖이나 생성자 내부에 중첩된 함수에서는 Super 호출이 허용되지 않습니다.",
        "'super' property access is permitted only in a constructor, member function, or member accessor of a derived class.": "'super' 속성 액세스는 생성자, 멤버 함수 또는 파생된 클래스의 멤버 접근자에서만 허용됩니다.",
        "Property '{0}' does not exist on type '{1}'.": "Property '{0}' does not exist on type '{1}'.",
        "Only public and protected methods of the base class are accessible via the 'super' keyword.": "Only public and protected methods of the base class are accessible via the 'super' keyword.",
        "Property '{0}' is private and only accessible within class '{1}'.": "Property '{0}' is private and only accessible within class '{1}'.",
        "An index expression argument must be of type 'string', 'number', 'symbol, or 'any'.": "An index expression argument must be of type 'string', 'number', 'symbol, or 'any'.",
        "Type '{0}' does not satisfy the constraint '{1}'.": "Type '{0}' does not satisfy the constraint '{1}'.",
        "Argument of type '{0}' is not assignable to parameter of type '{1}'.": "Argument of type '{0}' is not assignable to parameter of type '{1}'.",
        "Supplied parameters do not match any signature of call target.": "제공된 매개 변수가 호출 대상의 시그니처와 일치하지 않습니다.",
        "Untyped function calls may not accept type arguments.": "형식화되지 않은 함수 호출에는 형식 인수를 사용할 수 없습니다.",
        "Value of type '{0}' is not callable. Did you mean to include 'new'?": "'{0}' 형식의 값은 호출할 수 없습니다. 'new'를 포함하려고 했습니까?",
        "Cannot invoke an expression whose type lacks a call signature.": "형식에 호출 시그니처가 없는 식을 호출할 수 없습니다.",
        "Only a void function can be called with the 'new' keyword.": "Only a void function can be called with the 'new' keyword.",
        "Cannot use 'new' with an expression whose type lacks a call or construct signature.": "Cannot use 'new' with an expression whose type lacks a call or construct signature.",
        "Neither type '{0}' nor type '{1}' is assignable to the other.": "Neither type '{0}' nor type '{1}' is assignable to the other.",
        "Object literal may only specify known properties, and '{0}' does not exist in type '{1}'.": "Object literal may only specify known properties, and '{0}' does not exist in type '{1}'.",
        "No best common type exists among return expressions.": "No best common type exists among return expressions.",
        "A function whose declared type is neither 'void' nor 'any' must return a value or consist of a single 'throw' statement.": "A function whose declared type is neither 'void' nor 'any' must return a value or consist of a single 'throw' statement.",
        "An arithmetic operand must be of type 'any', 'number' or an enum type.": "An arithmetic operand must be of type 'any', 'number' or an enum type.",
        "The operand of an increment or decrement operator must be a variable, property or indexer.": "증가 연산자 또는 감소 연산자의 피연산자는 변수, 속성 또는 인덱서여야 합니다.",
        "The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter.": "'instanceof' 식 왼쪽은 'any' 형식, 개체 형식 또는 형식 매개 변수여야 합니다.",
        "The right-hand side of an 'instanceof' expression must be of type 'any' or of a type assignable to the 'Function' interface type.": "'instanceof' 식 오른쪽은 'any' 형식이거나 'Function' 인터페이스 형식에 할당할 수 있는 형식이어야 합니다.",
        "The left-hand side of an 'in' expression must be of type 'any', 'string', 'number', or 'symbol'.": "The left-hand side of an 'in' expression must be of type 'any', 'string', 'number', or 'symbol'.",
        "The right-hand side of an 'in' expression must be of type 'any', an object type or a type parameter": "The right-hand side of an 'in' expression must be of type 'any', an object type or a type parameter",
        "The left-hand side of an arithmetic operation must be of type 'any', 'number' or an enum type.": "산술 연산 왼쪽은 'any', 'number' 또는 열거형 형식이어야 합니다.",
        "The right-hand side of an arithmetic operation must be of type 'any', 'number' or an enum type.": "산술 연산 오른쪽은 'any', 'number' 또는 열거형 형식이어야 합니다.",
        "Invalid left-hand side of assignment expression.": "할당 식 왼쪽이 잘못되었습니다.",
        "Operator '{0}' cannot be applied to types '{1}' and '{2}'.": "'{0}' 연산자를 '{1}' 및 '{2}' 형식에 적용할 수 없습니다.",
        "Type parameter name cannot be '{0}'": "Type parameter name cannot be '{0}'",
        "A parameter property is only allowed in a constructor implementation.": "A parameter property is only allowed in a constructor implementation.",
        "A rest parameter must be of an array type.": "A rest parameter must be of an array type.",
        "A parameter initializer is only allowed in a function or constructor implementation.": "A parameter initializer is only allowed in a function or constructor implementation.",
        "Parameter '{0}' cannot be referenced in its initializer.": "매개 변수 '{0}'은(는) 해당 이니셜라이저에서 참조할 수 없습니다.",
        "Initializer of parameter '{0}' cannot reference identifier '{1}' declared after it.": "매개 변수 '{0}'의 이니셜라이저는 그 다음에 선언된 식별자 '{1}'을(를) 참조할 수 없습니다.",
        "Duplicate string index signature.": "중복 문자열 인덱스 시그니처입니다.",
        "Duplicate number index signature.": "중복 숫자 인덱스 시그니처입니다.",
        "A 'super' call must be the first statement in the constructor when a class contains initialized properties or has parameter properties.": "클래스에 초기화된 속성이 있거나 매개 변수 속성이 있으면 'super' 호출이 생성자에서 첫 번째 문이어야 합니다.",
        "Constructors for derived classes must contain a 'super' call.": "파생 클래스의 생성자는 'super' 호출을 포함해야 합니다.",
        "A 'get' accessor must return a value or consist of a single 'throw' statement.": "A 'get' accessor must return a value or consist of a single 'throw' statement.",
        "Getter and setter accessors do not agree in visibility.": "Getter 및 Setter 접근자의 표시 유형이 다릅니다.",
        "'get' and 'set' accessor must have the same type.": "'get' 및 'set' 접근자의 형식이 같아야 합니다.",
        "A signature with an implementation cannot use a string literal type.": "A signature with an implementation cannot use a string literal type.",
        "Specialized overload signature is not assignable to any non-specialized signature.": "특수화된 오버로드 시그니처는 특수화되지 않은 시그니처에 할당할 수 없습니다.",
        "Overload signatures must all be exported or not exported.": "오버로드 시그니처는 모두 내보내거나 모두 내보내지 않아야 합니다.",
        "Overload signatures must all be ambient or non-ambient.": "오버로드 시그니처는 모두 앰비언트이거나 앰비언트가 아니어야 합니다.",
        "Overload signatures must all be public, private or protected.": "Overload signatures must all be public, private or protected.",
        "Overload signatures must all be optional or required.": "오버로드 시그니처는 모두 선택 사항이거나 필수 사항이어야 합니다.",
        "Function overload must be static.": "함수 오버로드는 정적이어야 합니다.",
        "Function overload must not be static.": "함수 오버로드는 정적이 아니어야 합니다.",
        "Function implementation name must be '{0}'.": "Function implementation name must be '{0}'.",
        "Constructor implementation is missing.": "Constructor implementation is missing.",
        "Function implementation is missing or not immediately following the declaration.": "Function implementation is missing or not immediately following the declaration.",
        "Multiple constructor implementations are not allowed.": "여러 생성자 구현은 허용되지 않습니다.",
        "Duplicate function implementation.": "Duplicate function implementation.",
        "Overload signature is not compatible with function implementation.": "Overload signature is not compatible with function implementation.",
        "Individual declarations in merged declaration '{0}' must be all exported or all local.": "Individual declarations in merged declaration '{0}' must be all exported or all local.",
        "Duplicate identifier 'arguments'. Compiler uses 'arguments' to initialize rest parameters.": "중복 식별자 'arguments'입니다. 컴파일러는 'arguments'를 사용해서 rest 매개 변수를 초기화합니다.",
        "Duplicate identifier '_this'. Compiler uses variable declaration '_this' to capture 'this' reference.": "중복 식별자 '_this'입니다. 컴파일러는 변수 선언 '_this'를 사용해서 'this' 참조를 캡처합니다.",
        "Expression resolves to variable declaration '_this' that compiler uses to capture 'this' reference.": "컴파일러가 'this' 참조를 캡처하기 위해 사용하는 변수 선언 '_this'로 식이 확인됩니다.",
        "Duplicate identifier '_super'. Compiler uses '_super' to capture base class reference.": "중복 식별자 '_super'입니다. 컴파일러는 '_super'를 사용해서 기본 클래스 참조를 캡처합니다.",
        "Expression resolves to '_super' that compiler uses to capture base class reference.": "컴파일러가 기본 클래스 참조를 캡처하기 위해 사용하는 '_super'로 식이 확인됩니다.",
        "Subsequent variable declarations must have the same type.  Variable '{0}' must be of type '{1}', but here has type '{2}'.": "후속 변수 선언에 같은 형식이 있어야 합니다.  '{0}' 변수가 '{1}' 형식이어야 하는데 여기에는 '{2}' 형식이 있습니다.",
        "The left-hand side of a 'for...in' statement cannot use a type annotation.": "The left-hand side of a 'for...in' statement cannot use a type annotation.",
        "The left-hand side of a 'for...in' statement must be of type 'string' or 'any'.": "The left-hand side of a 'for...in' statement must be of type 'string' or 'any'.",
        "Invalid left-hand side in 'for...in' statement.": "Invalid left-hand side in 'for...in' statement.",
        "The right-hand side of a 'for...in' statement must be of type 'any', an object type or a type parameter.": "'for...in' 문 오른쪽은 'any' 형식, 개체 형식 또는 형식 매개 변수여야 합니다.",
        "Setters cannot return a value.": "Setter가 값을 반환할 수 없습니다.",
        "Return type of constructor signature must be assignable to the instance type of the class": "Return type of constructor signature must be assignable to the instance type of the class",
        "All symbols within a 'with' block will be resolved to 'any'.": "All symbols within a 'with' block will be resolved to 'any'.",
        "Property '{0}' of type '{1}' is not assignable to string index type '{2}'.": "Property '{0}' of type '{1}' is not assignable to string index type '{2}'.",
        "Property '{0}' of type '{1}' is not assignable to numeric index type '{2}'.": "Property '{0}' of type '{1}' is not assignable to numeric index type '{2}'.",
        "Numeric index type '{0}' is not assignable to string index type '{1}'.": "Numeric index type '{0}' is not assignable to string index type '{1}'.",
        "Class name cannot be '{0}'": "Class name cannot be '{0}'",
        "Class '{0}' incorrectly extends base class '{1}'.": "Class '{0}' incorrectly extends base class '{1}'.",
        "Class static side '{0}' incorrectly extends base class static side '{1}'.": "Class static side '{0}' incorrectly extends base class static side '{1}'.",
        "Type name '{0}' in extends clause does not reference constructor function for '{0}'.": "Type name '{0}' in extends clause does not reference constructor function for '{0}'.",
        "Class '{0}' incorrectly implements interface '{1}'.": "Class '{0}' incorrectly implements interface '{1}'.",
        "A class may only implement another class or interface.": "클래스는 다른 클래스나 인터페이스만 구현할 수 있습니다.",
        "Class '{0}' defines instance member function '{1}', but extended class '{2}' defines it as instance member accessor.": "'{0}' 클래스가 인스턴스 멤버 함수 '{1}'을(를) 정의하지만 확장 클래스 '{2}'은(는) 이 함수를 인스턴스 멤버 접근자로 정의합니다.",
        "Class '{0}' defines instance member function '{1}', but extended class '{2}' defines it as instance member property.": "'{0}' 클래스가 인스턴스 멤버 함수 '{1}'을(를) 정의하지만 확장 클래스 '{2}'은(는) 이 함수를 인스턴스 멤버 속성으로 정의합니다.",
        "Class '{0}' defines instance member property '{1}', but extended class '{2}' defines it as instance member function.": "'{0}' 클래스가 인스턴스 멤버 속성 '{1}'을(를) 정의하지만 확장 클래스 '{2}'은(는) 이 속성을 인스턴스 멤버 함수로 정의합니다.",
        "Class '{0}' defines instance member accessor '{1}', but extended class '{2}' defines it as instance member function.": "'{0}' 클래스는 인스턴스 멤버 접근자 '{1}'을(를) 정의하지만 확장 클래스 '{2}'은(는) 이 접근자를 인스턴스 멤버 함수로 정의합니다.",
        "Interface name cannot be '{0}'": "Interface name cannot be '{0}'",
        "All declarations of an interface must have identical type parameters.": "인터페이스의 모든 선언에는 동일한 형식 매개 변수가 포함되어야 합니다.",
        "Interface '{0}' incorrectly extends interface '{1}'.": "Interface '{0}' incorrectly extends interface '{1}'.",
        "Enum name cannot be '{0}'": "Enum name cannot be '{0}'",
        "In an enum with multiple declarations, only one declaration can omit an initializer for its first enum element.": "In an enum with multiple declarations, only one declaration can omit an initializer for its first enum element.",
        "A namespace declaration cannot be in a different file from a class or function with which it is merged": "A namespace declaration cannot be in a different file from a class or function with which it is merged",
        "A namespace declaration cannot be located prior to a class or function with which it is merged": "A namespace declaration cannot be located prior to a class or function with which it is merged",
        "Ambient modules cannot be nested in other modules.": "Ambient modules cannot be nested in other modules.",
        "Ambient module declaration cannot specify relative module name.": "Ambient module declaration cannot specify relative module name.",
        "Module '{0}' is hidden by a local declaration with the same name": "Module '{0}' is hidden by a local declaration with the same name",
        "Import name cannot be '{0}'": "Import name cannot be '{0}'",
        "Import or export declaration in an ambient module declaration cannot reference module through relative module name.": "Import or export declaration in an ambient module declaration cannot reference module through relative module name.",
        "Import declaration conflicts with local declaration of '{0}'": "Import declaration conflicts with local declaration of '{0}'",
        "Duplicate identifier '{0}'. Compiler reserves name '{1}' in top level scope of a module.": "Duplicate identifier '{0}'. Compiler reserves name '{1}' in top level scope of a module.",
        "Types have separate declarations of a private property '{0}'.": "Types have separate declarations of a private property '{0}'.",
        "Property '{0}' is protected but type '{1}' is not a class derived from '{2}'.": "Property '{0}' is protected but type '{1}' is not a class derived from '{2}'.",
        "Property '{0}' is protected in type '{1}' but public in type '{2}'.": "Property '{0}' is protected in type '{1}' but public in type '{2}'.",
        "Property '{0}' is protected and only accessible within class '{1}' and its subclasses.": "Property '{0}' is protected and only accessible within class '{1}' and its subclasses.",
        "Property '{0}' is protected and only accessible through an instance of class '{1}'.": "Property '{0}' is protected and only accessible through an instance of class '{1}'.",
        "The '{0}' operator is not allowed for boolean types. Consider using '{1}' instead.": "The '{0}' operator is not allowed for boolean types. Consider using '{1}' instead.",
        "Block-scoped variable '{0}' used before its declaration.": "Block-scoped variable '{0}' used before its declaration.",
        "The operand of an increment or decrement operator cannot be a constant.": "The operand of an increment or decrement operator cannot be a constant.",
        "Left-hand side of assignment expression cannot be a constant.": "Left-hand side of assignment expression cannot be a constant.",
        "Cannot redeclare block-scoped variable '{0}'.": "Cannot redeclare block-scoped variable '{0}'.",
        "An enum member cannot have a numeric name.": "An enum member cannot have a numeric name.",
        "The type argument for type parameter '{0}' cannot be inferred from the usage. Consider specifying the type arguments explicitly.": "The type argument for type parameter '{0}' cannot be inferred from the usage. Consider specifying the type arguments explicitly.",
        "Type argument candidate '{1}' is not a valid type argument because it is not a supertype of candidate '{0}'.": "Type argument candidate '{1}' is not a valid type argument because it is not a supertype of candidate '{0}'.",
        "Type alias '{0}' circularly references itself.": "Type alias '{0}' circularly references itself.",
        "Type alias name cannot be '{0}'": "Type alias name cannot be '{0}'",
        "An AMD module cannot have multiple name assignments.": "An AMD module cannot have multiple name assignments.",
        "Type '{0}' has no property '{1}' and no string index signature.": "Type '{0}' has no property '{1}' and no string index signature.",
        "Type '{0}' has no property '{1}'.": "Type '{0}' has no property '{1}'.",
        "Type '{0}' is not an array type.": "Type '{0}' is not an array type.",
        "A rest element must be last in an array destructuring pattern": "A rest element must be last in an array destructuring pattern",
        "A binding pattern parameter cannot be optional in an implementation signature.": "A binding pattern parameter cannot be optional in an implementation signature.",
        "A computed property name must be of type 'string', 'number', 'symbol', or 'any'.": "A computed property name must be of type 'string', 'number', 'symbol', or 'any'.",
        "'this' cannot be referenced in a computed property name.": "'this' cannot be referenced in a computed property name.",
        "'super' cannot be referenced in a computed property name.": "'super' cannot be referenced in a computed property name.",
        "A computed property name cannot reference a type parameter from its containing type.": "A computed property name cannot reference a type parameter from its containing type.",
        "Cannot find global value '{0}'.": "Cannot find global value '{0}'.",
        "The '{0}' operator cannot be applied to type 'symbol'.": "The '{0}' operator cannot be applied to type 'symbol'.",
        "'Symbol' reference does not refer to the global Symbol constructor object.": "'Symbol' reference does not refer to the global Symbol constructor object.",
        "A computed property name of the form '{0}' must be of type 'symbol'.": "A computed property name of the form '{0}' must be of type 'symbol'.",
        "Spread operator in 'new' expressions is only available when targeting ECMAScript 5 and higher.": "Spread operator in 'new' expressions is only available when targeting ECMAScript 5 and higher.",
        "Enum declarations must all be const or non-const.": "Enum declarations must all be const or non-const.",
        "In 'const' enum declarations member initializer must be constant expression.": "In 'const' enum declarations member initializer must be constant expression.",
        "'const' enums can only be used in property or index access expressions or the right hand side of an import declaration or export assignment.": "'const' enums can only be used in property or index access expressions or the right hand side of an import declaration or export assignment.",
        "A const enum member can only be accessed using a string literal.": "A const enum member can only be accessed using a string literal.",
        "'const' enum member initializer was evaluated to a non-finite value.": "'const' enum member initializer was evaluated to a non-finite value.",
        "'const' enum member initializer was evaluated to disallowed value 'NaN'.": "'const' enum member initializer was evaluated to disallowed value 'NaN'.",
        "Property '{0}' does not exist on 'const' enum '{1}'.": "Property '{0}' does not exist on 'const' enum '{1}'.",
        "'let' is not allowed to be used as a name in 'let' or 'const' declarations.": "'let' is not allowed to be used as a name in 'let' or 'const' declarations.",
        "Cannot initialize outer scoped variable '{0}' in the same scope as block scoped declaration '{1}'.": "Cannot initialize outer scoped variable '{0}' in the same scope as block scoped declaration '{1}'.",
        "The left-hand side of a 'for...of' statement cannot use a type annotation.": "The left-hand side of a 'for...of' statement cannot use a type annotation.",
        "Export declaration conflicts with exported declaration of '{0}'": "Export declaration conflicts with exported declaration of '{0}'",
        "The left-hand side of a 'for...of' statement cannot be a previously defined constant.": "The left-hand side of a 'for...of' statement cannot be a previously defined constant.",
        "The left-hand side of a 'for...in' statement cannot be a previously defined constant.": "The left-hand side of a 'for...in' statement cannot be a previously defined constant.",
        "Invalid left-hand side in 'for...of' statement.": "Invalid left-hand side in 'for...of' statement.",
        "Type must have a '[Symbol.iterator]()' method that returns an iterator.": "Type must have a '[Symbol.iterator]()' method that returns an iterator.",
        "An iterator must have a 'next()' method.": "An iterator must have a 'next()' method.",
        "The type returned by the 'next()' method of an iterator must have a 'value' property.": "The type returned by the 'next()' method of an iterator must have a 'value' property.",
        "The left-hand side of a 'for...in' statement cannot be a destructuring pattern.": "The left-hand side of a 'for...in' statement cannot be a destructuring pattern.",
        "Cannot redeclare identifier '{0}' in catch clause": "Cannot redeclare identifier '{0}' in catch clause",
        "Tuple type '{0}' with length '{1}' cannot be assigned to tuple with length '{2}'.": "Tuple type '{0}' with length '{1}' cannot be assigned to tuple with length '{2}'.",
        "Using a string in a 'for...of' statement is only supported in ECMAScript 5 and higher.": "Using a string in a 'for...of' statement is only supported in ECMAScript 5 and higher.",
        "Type '{0}' is not an array type or a string type.": "Type '{0}' is not an array type or a string type.",
        "The 'arguments' object cannot be referenced in an arrow function in ES3 and ES5. Consider using a standard function expression.": "The 'arguments' object cannot be referenced in an arrow function in ES3 and ES5. Consider using a standard function expression.",
        "Module '{0}' resolves to a non-module entity and cannot be imported using this construct.": "Module '{0}' resolves to a non-module entity and cannot be imported using this construct.",
        "Module '{0}' uses 'export =' and cannot be used with 'export *'.": "Module '{0}' uses 'export =' and cannot be used with 'export *'.",
        "An interface can only extend an identifier/qualified-name with optional type arguments.": "An interface can only extend an identifier/qualified-name with optional type arguments.",
        "A class can only implement an identifier/qualified-name with optional type arguments.": "A class can only implement an identifier/qualified-name with optional type arguments.",
        "A rest element cannot contain a binding pattern.": "A rest element cannot contain a binding pattern.",
        "'{0}' is referenced directly or indirectly in its own type annotation.": "'{0}' is referenced directly or indirectly in its own type annotation.",
        "Cannot find namespace '{0}'.": "Cannot find namespace '{0}'.",
        "No best common type exists among yield expressions.": "No best common type exists among yield expressions.",
        "A generator cannot have a 'void' type annotation.": "A generator cannot have a 'void' type annotation.",
        "'{0}' is referenced directly or indirectly in its own base expression.": "'{0}' is referenced directly or indirectly in its own base expression.",
        "Type '{0}' is not a constructor function type.": "Type '{0}' is not a constructor function type.",
        "No base constructor has the specified number of type arguments.": "No base constructor has the specified number of type arguments.",
        "Base constructor return type '{0}' is not a class or interface type.": "Base constructor return type '{0}' is not a class or interface type.",
        "Base constructors must all have the same return type.": "Base constructors must all have the same return type.",
        "Cannot create an instance of the abstract class '{0}'.": "Cannot create an instance of the abstract class '{0}'.",
        "Overload signatures must all be abstract or not abstract.": "Overload signatures must all be abstract or not abstract.",
        "Abstract method '{0}' in class '{1}' cannot be accessed via super expression.": "Abstract method '{0}' in class '{1}' cannot be accessed via super expression.",
        "Classes containing abstract methods must be marked abstract.": "Classes containing abstract methods must be marked abstract.",
        "Non-abstract class '{0}' does not implement inherited abstract member '{1}' from class '{2}'.": "Non-abstract class '{0}' does not implement inherited abstract member '{1}' from class '{2}'.",
        "All declarations of an abstract method must be consecutive.": "All declarations of an abstract method must be consecutive.",
        "Cannot assign an abstract constructor type to a non-abstract constructor type.": "Cannot assign an abstract constructor type to a non-abstract constructor type.",
        "Only an ambient class can be merged with an interface.": "Only an ambient class can be merged with an interface.",
        "Duplicate identifier '{0}'. Compiler uses declaration '{1}' to support async functions.": "Duplicate identifier '{0}'. Compiler uses declaration '{1}' to support async functions.",
        "Expression resolves to variable declaration '{0}' that compiler uses to support async functions.": "Expression resolves to variable declaration '{0}' that compiler uses to support async functions.",
        "The 'arguments' object cannot be referenced in an async arrow function. Consider using a standard async function expression.": "The 'arguments' object cannot be referenced in an async arrow function. Consider using a standard async function expression.",
        "'yield' expressions cannot be used in a parameter initializer.": "'yield' expressions cannot be used in a parameter initializer.",
        "'await' expressions cannot be used in a parameter initializer.": "'await' expressions cannot be used in a parameter initializer.",
        "JSX element attributes type '{0}' must be an object type.": "JSX element attributes type '{0}' must be an object type.",
        "The return type of a JSX element constructor must return an object type.": "The return type of a JSX element constructor must return an object type.",
        "JSX element implicitly has type 'any' because the global type 'JSX.Element' does not exist.": "JSX element implicitly has type 'any' because the global type 'JSX.Element' does not exist.",
        "Property '{0}' in type '{1}' is not assignable to type '{2}'": "Property '{0}' in type '{1}' is not assignable to type '{2}'",
        "JSX element type '{0}' does not have any construct or call signatures.": "JSX element type '{0}' does not have any construct or call signatures.",
        "JSX element type '{0}' is not a constructor function for JSX elements.": "JSX element type '{0}' is not a constructor function for JSX elements.",
        "Property '{0}' of JSX spread attribute is not assignable to target property.": "Property '{0}' of JSX spread attribute is not assignable to target property.",
        "JSX element class does not support attributes because it does not have a '{0}' property": "JSX element class does not support attributes because it does not have a '{0}' property",
        "The global type 'JSX.{0}' may not have more than one property": "The global type 'JSX.{0}' may not have more than one property",
        "Cannot emit namespaced JSX elements in React": "Cannot emit namespaced JSX elements in React",
        "A member initializer in a enum declaration cannot reference members declared after it, including members defined in other enums.": "A member initializer in a enum declaration cannot reference members declared after it, including members defined in other enums.",
        "Merged declaration '{0}' cannot include a default export declaration. Consider adding a separate 'export default {0}' declaration instead.": "Merged declaration '{0}' cannot include a default export declaration. Consider adding a separate 'export default {0}' declaration instead.",
        "Exported external package typings file cannot contain tripleslash references. Please contact the package author to update the package definition.": "Exported external package typings file cannot contain tripleslash references. Please contact the package author to update the package definition.",
        "Exported external package typings can only be in '.d.ts' files. Please contact the package author to update the package definition.": "Exported external package typings can only be in '.d.ts' files. Please contact the package author to update the package definition.",
        "Import declaration '{0}' is using private name '{1}'.": "Import declaration '{0}' is using private name '{1}'.",
        "Type parameter '{0}' of exported class has or is using private name '{1}'.": "Type parameter '{0}' of exported class has or is using private name '{1}'.",
        "Type parameter '{0}' of exported interface has or is using private name '{1}'.": "Type parameter '{0}' of exported interface has or is using private name '{1}'.",
        "Type parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'.": "Type parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'.",
        "Type parameter '{0}' of call signature from exported interface has or is using private name '{1}'.": "Type parameter '{0}' of call signature from exported interface has or is using private name '{1}'.",
        "Type parameter '{0}' of public static method from exported class has or is using private name '{1}'.": "Type parameter '{0}' of public static method from exported class has or is using private name '{1}'.",
        "Type parameter '{0}' of public method from exported class has or is using private name '{1}'.": "Type parameter '{0}' of public method from exported class has or is using private name '{1}'.",
        "Type parameter '{0}' of method from exported interface has or is using private name '{1}'.": "Type parameter '{0}' of method from exported interface has or is using private name '{1}'.",
        "Type parameter '{0}' of exported function has or is using private name '{1}'.": "Type parameter '{0}' of exported function has or is using private name '{1}'.",
        "Implements clause of exported class '{0}' has or is using private name '{1}'.": "Implements clause of exported class '{0}' has or is using private name '{1}'.",
        "Extends clause of exported class '{0}' has or is using private name '{1}'.": "Extends clause of exported class '{0}' has or is using private name '{1}'.",
        "Extends clause of exported interface '{0}' has or is using private name '{1}'.": "Extends clause of exported interface '{0}' has or is using private name '{1}'.",
        "Exported variable '{0}' has or is using name '{1}' from external module {2} but cannot be named.": "Exported variable '{0}' has or is using name '{1}' from external module {2} but cannot be named.",
        "Exported variable '{0}' has or is using name '{1}' from private module '{2}'.": "Exported variable '{0}' has or is using name '{1}' from private module '{2}'.",
        "Exported variable '{0}' has or is using private name '{1}'.": "Exported variable '{0}' has or is using private name '{1}'.",
        "Public static property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named.": "Public static property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named.",
        "Public static property '{0}' of exported class has or is using name '{1}' from private module '{2}'.": "Public static property '{0}' of exported class has or is using name '{1}' from private module '{2}'.",
        "Public static property '{0}' of exported class has or is using private name '{1}'.": "Public static property '{0}' of exported class has or is using private name '{1}'.",
        "Public property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named.": "Public property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named.",
        "Public property '{0}' of exported class has or is using name '{1}' from private module '{2}'.": "Public property '{0}' of exported class has or is using name '{1}' from private module '{2}'.",
        "Public property '{0}' of exported class has or is using private name '{1}'.": "Public property '{0}' of exported class has or is using private name '{1}'.",
        "Property '{0}' of exported interface has or is using name '{1}' from private module '{2}'.": "Property '{0}' of exported interface has or is using name '{1}' from private module '{2}'.",
        "Property '{0}' of exported interface has or is using private name '{1}'.": "Property '{0}' of exported interface has or is using private name '{1}'.",
        "Parameter '{0}' of public static property setter from exported class has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of public static property setter from exported class has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of public static property setter from exported class has or is using private name '{1}'.": "Parameter '{0}' of public static property setter from exported class has or is using private name '{1}'.",
        "Parameter '{0}' of public property setter from exported class has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of public property setter from exported class has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of public property setter from exported class has or is using private name '{1}'.": "Parameter '{0}' of public property setter from exported class has or is using private name '{1}'.",
        "Return type of public static property getter from exported class has or is using name '{0}' from external module {1} but cannot be named.": "Return type of public static property getter from exported class has or is using name '{0}' from external module {1} but cannot be named.",
        "Return type of public static property getter from exported class has or is using name '{0}' from private module '{1}'.": "Return type of public static property getter from exported class has or is using name '{0}' from private module '{1}'.",
        "Return type of public static property getter from exported class has or is using private name '{0}'.": "Return type of public static property getter from exported class has or is using private name '{0}'.",
        "Return type of public property getter from exported class has or is using name '{0}' from external module {1} but cannot be named.": "Return type of public property getter from exported class has or is using name '{0}' from external module {1} but cannot be named.",
        "Return type of public property getter from exported class has or is using name '{0}' from private module '{1}'.": "Return type of public property getter from exported class has or is using name '{0}' from private module '{1}'.",
        "Return type of public property getter from exported class has or is using private name '{0}'.": "Return type of public property getter from exported class has or is using private name '{0}'.",
        "Return type of constructor signature from exported interface has or is using name '{0}' from private module '{1}'.": "Return type of constructor signature from exported interface has or is using name '{0}' from private module '{1}'.",
        "Return type of constructor signature from exported interface has or is using private name '{0}'.": "Return type of constructor signature from exported interface has or is using private name '{0}'.",
        "Return type of call signature from exported interface has or is using name '{0}' from private module '{1}'.": "Return type of call signature from exported interface has or is using name '{0}' from private module '{1}'.",
        "Return type of call signature from exported interface has or is using private name '{0}'.": "Return type of call signature from exported interface has or is using private name '{0}'.",
        "Return type of index signature from exported interface has or is using name '{0}' from private module '{1}'.": "Return type of index signature from exported interface has or is using name '{0}' from private module '{1}'.",
        "Return type of index signature from exported interface has or is using private name '{0}'.": "Return type of index signature from exported interface has or is using private name '{0}'.",
        "Return type of public static method from exported class has or is using name '{0}' from external module {1} but cannot be named.": "Return type of public static method from exported class has or is using name '{0}' from external module {1} but cannot be named.",
        "Return type of public static method from exported class has or is using name '{0}' from private module '{1}'.": "Return type of public static method from exported class has or is using name '{0}' from private module '{1}'.",
        "Return type of public static method from exported class has or is using private name '{0}'.": "Return type of public static method from exported class has or is using private name '{0}'.",
        "Return type of public method from exported class has or is using name '{0}' from external module {1} but cannot be named.": "Return type of public method from exported class has or is using name '{0}' from external module {1} but cannot be named.",
        "Return type of public method from exported class has or is using name '{0}' from private module '{1}'.": "Return type of public method from exported class has or is using name '{0}' from private module '{1}'.",
        "Return type of public method from exported class has or is using private name '{0}'.": "Return type of public method from exported class has or is using private name '{0}'.",
        "Return type of method from exported interface has or is using name '{0}' from private module '{1}'.": "Return type of method from exported interface has or is using name '{0}' from private module '{1}'.",
        "Return type of method from exported interface has or is using private name '{0}'.": "Return type of method from exported interface has or is using private name '{0}'.",
        "Return type of exported function has or is using name '{0}' from external module {1} but cannot be named.": "Return type of exported function has or is using name '{0}' from external module {1} but cannot be named.",
        "Return type of exported function has or is using name '{0}' from private module '{1}'.": "Return type of exported function has or is using name '{0}' from private module '{1}'.",
        "Return type of exported function has or is using private name '{0}'.": "Return type of exported function has or is using private name '{0}'.",
        "Parameter '{0}' of constructor from exported class has or is using name '{1}' from external module {2} but cannot be named.": "Parameter '{0}' of constructor from exported class has or is using name '{1}' from external module {2} but cannot be named.",
        "Parameter '{0}' of constructor from exported class has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of constructor from exported class has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of constructor from exported class has or is using private name '{1}'.": "Parameter '{0}' of constructor from exported class has or is using private name '{1}'.",
        "Parameter '{0}' of constructor signature from exported interface has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of constructor signature from exported interface has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'.": "Parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'.",
        "Parameter '{0}' of call signature from exported interface has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of call signature from exported interface has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of call signature from exported interface has or is using private name '{1}'.": "Parameter '{0}' of call signature from exported interface has or is using private name '{1}'.",
        "Parameter '{0}' of public static method from exported class has or is using name '{1}' from external module {2} but cannot be named.": "Parameter '{0}' of public static method from exported class has or is using name '{1}' from external module {2} but cannot be named.",
        "Parameter '{0}' of public static method from exported class has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of public static method from exported class has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of public static method from exported class has or is using private name '{1}'.": "Parameter '{0}' of public static method from exported class has or is using private name '{1}'.",
        "Parameter '{0}' of public method from exported class has or is using name '{1}' from external module {2} but cannot be named.": "Parameter '{0}' of public method from exported class has or is using name '{1}' from external module {2} but cannot be named.",
        "Parameter '{0}' of public method from exported class has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of public method from exported class has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of public method from exported class has or is using private name '{1}'.": "Parameter '{0}' of public method from exported class has or is using private name '{1}'.",
        "Parameter '{0}' of method from exported interface has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of method from exported interface has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of method from exported interface has or is using private name '{1}'.": "Parameter '{0}' of method from exported interface has or is using private name '{1}'.",
        "Parameter '{0}' of exported function has or is using name '{1}' from external module {2} but cannot be named.": "Parameter '{0}' of exported function has or is using name '{1}' from external module {2} but cannot be named.",
        "Parameter '{0}' of exported function has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of exported function has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of exported function has or is using private name '{1}'.": "Parameter '{0}' of exported function has or is using private name '{1}'.",
        "Exported type alias '{0}' has or is using private name '{1}'.": "Exported type alias '{0}' has or is using private name '{1}'.",
        "Default export of the module has or is using private name '{0}'.": "Default export of the module has or is using private name '{0}'.",
        "Loop contains block-scoped variable '{0}' referenced by a function in the loop. This is only supported in ECMAScript 6 or higher.": "Loop contains block-scoped variable '{0}' referenced by a function in the loop. This is only supported in ECMAScript 6 or higher.",
        "The current host does not support the '{0}' option.": "The current host does not support the '{0}' option.",
        "Cannot find the common subdirectory path for the input files.": "입력 파일의 공용 하위 디렉터리 경로를 찾을 수 없습니다.",
        "Cannot read file '{0}': {1}": "파일 '{0}'을(를) 읽을 수 없습니다. {1}",
        "Unsupported file encoding.": "지원되지 않는 파일 인코딩입니다.",
        "Failed to parse file '{0}': {1}.": "Failed to parse file '{0}': {1}.",
        "Unknown compiler option '{0}'.": "Unknown compiler option '{0}'.",
        "Compiler option '{0}' requires a value of type {1}.": "Compiler option '{0}' requires a value of type {1}.",
        "Could not write file '{0}': {1}": "Could not write file '{0}': {1}",
        "Option 'project' cannot be mixed with source files on a command line.": "Option 'project' cannot be mixed with source files on a command line.",
        "Option 'isolatedModules' can only be used when either option'--module' is provided or option 'target' is 'ES6' or higher.": "Option 'isolatedModules' can only be used when either option'--module' is provided or option 'target' is 'ES6' or higher.",
        "Option 'inlineSources' can only be used when either option '--inlineSourceMap' or option '--sourceMap' is provided.": "Option 'inlineSources' can only be used when either option '--inlineSourceMap' or option '--sourceMap' is provided.",
        "Option '{0}' cannot be specified without specifying option '{1}'.": "Option '{0}' cannot be specified without specifying option '{1}'.",
        "Option '{0}' cannot be specified with option '{1}'.": "Option '{0}' cannot be specified with option '{1}'.",
        "A 'tsconfig.json' file is already defined at: '{0}'.": "A 'tsconfig.json' file is already defined at: '{0}'.",
        "Concatenate and emit output to single file.": "출력을 연결하고 단일 파일로 내보냅니다.",
        "Generates corresponding '.d.ts' file.": "Generates corresponding '.d.ts' file.",
        "Specifies the location where debugger should locate map files instead of generated locations.": "디버거가 생성된 위치 대신 맵 파일을 찾아야 하는 위치를 지정합니다.",
        "Specifies the location where debugger should locate TypeScript files instead of source locations.": "디버거가 소스 위치 대신 TypeScript 파일을 찾아야 하는 위치를 지정합니다.",
        "Watch input files.": "조사식 입력 파일입니다.",
        "Redirect output structure to the directory.": "출력 구조를 디렉터리로 리디렉션합니다.",
        "Do not erase const enum declarations in generated code.": "Do not erase const enum declarations in generated code.",
        "Do not emit outputs if any errors were reported.": "Do not emit outputs if any errors were reported.",
        "Do not emit comments to output.": "주석을 출력에 내보내지 마십시오.",
        "Do not emit outputs.": "Do not emit outputs.",
        "Specify ECMAScript target version: 'ES3' (default), 'ES5', or 'ES6' (experimental)": "Specify ECMAScript target version: 'ES3' (default), 'ES5', or 'ES6' (experimental)",
        "Specify module code generation: 'commonjs', 'amd', 'system' or 'umd'": "Specify module code generation: 'commonjs', 'amd', 'system' or 'umd'",
        "Print this message.": "이 메시지를 출력합니다.",
        "Print the compiler's version.": "Print the compiler's version.",
        "Compile the project in the given directory.": "Compile the project in the given directory.",
        "Syntax: {0}": "Syntax: {0}",
        "options": "옵션",
        "file1": "파일",
        "Examples: {0}": "Examples: {0}",
        "Options:": "옵션:",
        "Version {0}": "버전 {0}",
        "Insert command line options and files from a file.": "파일에서 명령줄 옵션 및 파일을 삽입합니다.",
        "File change detected. Starting incremental compilation...": "File change detected. Starting incremental compilation...",
        "KIND": "KIND",
        "file2": "파일",
        "VERSION": "버전",
        "LOCATION": "위치",
        "DIRECTORY": "디렉터리",
        "Compilation complete. Watching for file changes.": "Compilation complete. Watching for file changes.",
        "Generates corresponding '.map' file.": "Generates corresponding '.map' file.",
        "Compiler option '{0}' expects an argument.": "Compiler option '{0}' expects an argument.",
        "Unterminated quoted string in response file '{0}'.": "Unterminated quoted string in response file '{0}'.",
        "Argument for '--module' option must be 'commonjs', 'amd', 'system' or 'umd'.": "Argument for '--module' option must be 'commonjs', 'amd', 'system' or 'umd'.",
        "Argument for '--target' option must be 'ES3', 'ES5', or 'ES6'.": "Argument for '--target' option must be 'ES3', 'ES5', or 'ES6'.",
        "Locale must be of the form <language> or <language>-<territory>. For example '{0}' or '{1}'.": "로캘이 <language> 또는 <language>-<territory> 형식이어야 합니다. 예를 들어 '{0}' 또는 '{1}'입니다.",
        "Unsupported locale '{0}'.": "Unsupported locale '{0}'.",
        "Unable to open file '{0}'.": "Unable to open file '{0}'.",
        "Corrupted locale file {0}.": "Corrupted locale file {0}.",
        "Raise error on expressions and declarations with an implied 'any' type.": "Raise error on expressions and declarations with an implied 'any' type.",
        "File '{0}' not found.": "File '{0}' not found.",
        "File '{0}' has unsupported extension. The only supported extensions are {1}.": "File '{0}' has unsupported extension. The only supported extensions are {1}.",
        "Suppress noImplicitAny errors for indexing objects lacking index signatures.": "Suppress noImplicitAny errors for indexing objects lacking index signatures.",
        "Do not emit declarations for code that has an '@internal' annotation.": "Do not emit declarations for code that has an '@internal' annotation.",
        "Specifies the root directory of input files. Use to control the output directory structure with --outDir.": "Specifies the root directory of input files. Use to control the output directory structure with --outDir.",
        "File '{0}' is not under 'rootDir' '{1}'. 'rootDir' is expected to contain all source files.": "File '{0}' is not under 'rootDir' '{1}'. 'rootDir' is expected to contain all source files.",
        "Specifies the end of line sequence to be used when emitting files: 'CRLF' (dos) or 'LF' (unix).": "Specifies the end of line sequence to be used when emitting files: 'CRLF' (dos) or 'LF' (unix).",
        "NEWLINE": "NEWLINE",
        "Argument for '--newLine' option must be 'CRLF' or 'LF'.": "Argument for '--newLine' option must be 'CRLF' or 'LF'.",
        "Argument for '--moduleResolution' option must be 'node' or 'classic'.": "Argument for '--moduleResolution' option must be 'node' or 'classic'.",
        "Specify JSX code generation: 'preserve' or 'react'": "Specify JSX code generation: 'preserve' or 'react'",
        "Argument for '--jsx' must be 'preserve' or 'react'.": "Argument for '--jsx' must be 'preserve' or 'react'.",
        "Enables experimental support for ES7 decorators.": "Enables experimental support for ES7 decorators.",
        "Enables experimental support for emitting type metadata for decorators.": "Enables experimental support for emitting type metadata for decorators.",
        "Option 'experimentalAsyncFunctions' cannot be specified when targeting ES5 or lower.": "Option 'experimentalAsyncFunctions' cannot be specified when targeting ES5 or lower.",
        "Enables experimental support for ES7 async functions.": "Enables experimental support for ES7 async functions.",
        "Specifies module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6).": "Specifies module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6).",
        "Initializes a TypeScript project and creates a tsconfig.json file.": "Initializes a TypeScript project and creates a tsconfig.json file.",
        "Successfully created a tsconfig.json file.": "Successfully created a tsconfig.json file.",
        "Suppress excess property checks for object literals.": "Suppress excess property checks for object literals.",
        "Variable '{0}' implicitly has an '{1}' type.": "Variable '{0}' implicitly has an '{1}' type.",
        "Parameter '{0}' implicitly has an '{1}' type.": "Parameter '{0}' implicitly has an '{1}' type.",
        "Member '{0}' implicitly has an '{1}' type.": "Member '{0}' implicitly has an '{1}' type.",
        "'new' expression, whose target lacks a construct signature, implicitly has an 'any' type.": "'new' expression, whose target lacks a construct signature, implicitly has an 'any' type.",
        "'{0}', which lacks return-type annotation, implicitly has an '{1}' return type.": "'{0}', which lacks return-type annotation, implicitly has an '{1}' return type.",
        "Function expression, which lacks return-type annotation, implicitly has an '{0}' return type.": "Function expression, which lacks return-type annotation, implicitly has an '{0}' return type.",
        "Construct signature, which lacks return-type annotation, implicitly has an 'any' return type.": "Construct signature, which lacks return-type annotation, implicitly has an 'any' return type.",
        "Property '{0}' implicitly has type 'any', because its 'set' accessor lacks a type annotation.": "Property '{0}' implicitly has type 'any', because its 'set' accessor lacks a type annotation.",
        "Index signature of object type implicitly has an 'any' type.": "개체 형식의 인덱스 시그니처에는 암시적으로 'any' 형식이 포함됩니다.",
        "Object literal's property '{0}' implicitly has an '{1}' type.": "Object literal's property '{0}' implicitly has an '{1}' type.",
        "Rest parameter '{0}' implicitly has an 'any[]' type.": "Rest parameter '{0}' implicitly has an 'any[]' type.",
        "Call signature, which lacks return-type annotation, implicitly has an 'any' return type.": "Call signature, which lacks return-type annotation, implicitly has an 'any' return type.",
        "'{0}' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.": "'{0}' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.",
        "'{0}' implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.": "'{0}' implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.",
        "Function implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.": "Function implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.",
        "Generator implicitly has type '{0}' because it does not yield any values. Consider supplying a return type.": "Generator implicitly has type '{0}' because it does not yield any values. Consider supplying a return type.",
        "JSX element implicitly has type 'any' because no interface 'JSX.{0}' exists": "JSX element implicitly has type 'any' because no interface 'JSX.{0}' exists",
        "You cannot rename this element.": "You cannot rename this element.",
        "You cannot rename elements that are defined in the standard TypeScript library.": "You cannot rename elements that are defined in the standard TypeScript library.",
        "'import ... =' can only be used in a .ts file.": "'import ... =' can only be used in a .ts file.",
        "'export=' can only be used in a .ts file.": "'export=' can only be used in a .ts file.",
        "'type parameter declarations' can only be used in a .ts file.": "'type parameter declarations' can only be used in a .ts file.",
        "'implements clauses' can only be used in a .ts file.": "'implements clauses' can only be used in a .ts file.",
        "'interface declarations' can only be used in a .ts file.": "'interface declarations' can only be used in a .ts file.",
        "'module declarations' can only be used in a .ts file.": "'module declarations' can only be used in a .ts file.",
        "'type aliases' can only be used in a .ts file.": "'type aliases' can only be used in a .ts file.",
        "'{0}' can only be used in a .ts file.": "'{0}' can only be used in a .ts file.",
        "'types' can only be used in a .ts file.": "'types' can only be used in a .ts file.",
        "'type arguments' can only be used in a .ts file.": "'type arguments' can only be used in a .ts file.",
        "'parameter modifiers' can only be used in a .ts file.": "'parameter modifiers' can only be used in a .ts file.",
        "'property declarations' can only be used in a .ts file.": "'property declarations' can only be used in a .ts file.",
        "'enum declarations' can only be used in a .ts file.": "'enum declarations' can only be used in a .ts file.",
        "'type assertion expressions' can only be used in a .ts file.": "'type assertion expressions' can only be used in a .ts file.",
        "'decorators' can only be used in a .ts file.": "'decorators' can only be used in a .ts file.",
        "Only identifiers/qualified-names with optional type arguments are currently supported in a class 'extends' clauses.": "Only identifiers/qualified-names with optional type arguments are currently supported in a class 'extends' clauses.",
        "'class' expressions are not currently supported.": "'class' expressions are not currently supported.",
        "JSX attributes must only be assigned a non-empty 'expression'.": "JSX attributes must only be assigned a non-empty 'expression'.",
        "JSX elements cannot have multiple attributes with the same name.": "JSX elements cannot have multiple attributes with the same name.",
        "Expected corresponding JSX closing tag for '{0}'.": "Expected corresponding JSX closing tag for '{0}'.",
        "JSX attribute expected.": "JSX attribute expected.",
        "Cannot use JSX unless the '--jsx' flag is provided.": "Cannot use JSX unless the '--jsx' flag is provided.",
        "A constructor cannot contain a 'super' call when its class extends 'null'": "A constructor cannot contain a 'super' call when its class extends 'null'"
}