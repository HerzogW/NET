<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Define best practice defaults for creating a gallery package.  You may override these as part of build -->
  <PropertyGroup>
    <GalleryPackagesSourceFolder Condition="'$(GalleryPackagesSourceFolder)' == ''">$(SolutionDir)GalleryPackages</GalleryPackagesSourceFolder>
    <GalleryPackagesOutFolder Condition="'$(GalleryPackagesOutFolder)' == ''">$(ProjectDir)App_Data\Gallery</GalleryPackagesOutFolder>
    <GalleryManifestDefaultName Condition="'$(GalleryManifestDefaultName)' == ''">Manifest.json</GalleryManifestDefaultName>
    <GalleryUtilityAdditionalArgs Condition="'$(GalleryUtilityAdditionalArgs)' == ''"></GalleryUtilityAdditionalArgs>
    <GalleryExe Condition="'$(GalleryExe)' == ''">$(MSBuildThisFileDirectory)..\tools\AzureGallery.exe</GalleryExe>
  </PropertyGroup>

  <!-- If no manifest files were supplied, recursively find manifest files using the default name within the source folder -->
  <ItemGroup Condition="'@(GalleryManifests)' == ''">
    <GalleryManifests Include="$(GalleryPackagesSourceFolder)\**\$(GalleryManifestDefaultName)" />
  </ItemGroup>

  <!-- If manifests are present execute gallery utility -->
  <Target Name="BeforeBuild" Condition="'@(GalleryManifests)' != ''">
    <!-- Make the output dir if it doesn't exist -->
    <MakeDir Directories="$(GalleryPackagesOutFolder)" Condition="!Exists('$(GalleryPackagesOutFolder)')" />
    <!-- Execute the AzureGallery utility for all manifests -->
    <Exec Command="&quot;$(GalleryExe)&quot; package -m &quot;%(GalleryManifests.Identity)&quot; -o  &quot;$(GalleryPackagesOutFolder)&quot; $(GalleryUtilityAdditionalArgs)" />
  </Target>
</Project>